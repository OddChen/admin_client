[{"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\index.js":"1","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\App.js":"2","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\login\\login.jsx":"3","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\api\\index.js":"4","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\api\\ajax.js":"5","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\utils\\memoryUtils.js":"6","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\utils\\storageUtils.js":"7","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\dashboard\\dashboard.jsx":"8","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\header\\index.jsx":"9","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\home\\home.jsx":"10","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\manage\\manage.jsx":"11","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\config\\menu-config.js":"12","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\user\\user.jsx":"13","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\link-button\\index.jsx":"14","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\register\\register.jsx":"15","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\config\\cityselect-config.js":"16","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\editor.jsx":"17","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.page.jsx":"18","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.config.jsx":"19","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editorblock.jsx":"20","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.commander.js":"21","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\plugins\\command.plugin.js":"22","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\plugins\\keyboard-code.js":"23","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.utils.js":"24","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\plugins\\event.js":"25","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\service\\dialog\\dialog.jsx":"26","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\utils\\defer.js":"27","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.resize.jsx":"28","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editoroperator.jsx":"29","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.props.jsx":"30","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\hooks\\CallbackRef.js":"31","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\hooks\\useUpadate.js":"32","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editorscheme\\editorscheme.jsx":"33","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\lines.jsx":"34","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\bar3D.jsx":"35","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\evaluation\\evaluation.jsx":"36","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\evaluation\\components\\criteriaToDataColumns.jsx":"37","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\evaluation\\components\\criteriatable.jsx":"38","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\evaluation\\components\\datatable.jsx":"39","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\evaluation\\components\\visualization.jsx":"40","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\evaluation\\components\\resulttable.jsx":"41","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\evaluation\\components\\topsis.js":"42","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\bar.jsx":"43","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\pie.jsx":"44","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\border-container\\index.jsx":"45","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\dashboard\\components\\custombartrend\\index.jsx":"46","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\dashboard\\components\\sharedataset\\index.jsx":"47","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\dashboard\\components\\mapchart\\index.jsx":"48","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\index.jsx":"49","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\mapurl.js":"50","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\radar.jsx":"51","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\barlabel.jsx":"52","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\bubble.jsx":"53","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\nightingale.jsx":"54","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\funnel.jsx":"55","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\scatter.jsx":"56","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\FillChart\\ExtrudeMesh.js":"57","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\FillChart\\tag.js":"58","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\FillChart\\borderline.js":"59","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\BubbleChart\\line.js":"60","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\BubbleChart\\tag.js":"61","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\BubbleChart\\cirMesh.js":"62","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\BubbleChart\\shapeMesh.js":"63","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\BarChart\\line.js":"64","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\BarChart\\prismMesh.js":"65","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\BarChart\\ExtrudeMesh.js":"66","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\BarChart\\tag.js":"67"},{"size":333,"mtime":1614580960429,"results":"68","hashOfConfig":"69"},{"size":668,"mtime":1652844819174,"results":"70","hashOfConfig":"69"},{"size":3766,"mtime":1648267324983,"results":"71","hashOfConfig":"69"},{"size":624,"mtime":1626095397589,"results":"72","hashOfConfig":"69"},{"size":860,"mtime":1626854164922,"results":"73","hashOfConfig":"69"},{"size":122,"mtime":1614582255264,"results":"74","hashOfConfig":"69"},{"size":484,"mtime":1614581432443,"results":"75","hashOfConfig":"69"},{"size":3115,"mtime":1653140099700,"results":"76","hashOfConfig":"69"},{"size":2266,"mtime":1648267362922,"results":"77","hashOfConfig":"69"},{"size":2223,"mtime":1652844620869,"results":"78","hashOfConfig":"69"},{"size":109,"mtime":1615794788002,"results":"79","hashOfConfig":"80"},{"size":987,"mtime":1652844017807,"results":"81","hashOfConfig":"69"},{"size":103,"mtime":1615799954705,"results":"82","hashOfConfig":"69"},{"size":163,"mtime":1616660821234,"results":"83","hashOfConfig":"69"},{"size":4562,"mtime":1648267646389,"results":"84","hashOfConfig":"69"},{"size":215454,"mtime":1617874331776,"results":"85","hashOfConfig":"69"},{"size":1099,"mtime":1653139977032,"results":"86","hashOfConfig":"69"},{"size":20519,"mtime":1642667186518,"results":"87","hashOfConfig":"69"},{"size":8297,"mtime":1653227246177,"results":"88","hashOfConfig":"69"},{"size":2350,"mtime":1625197027381,"results":"89","hashOfConfig":"69"},{"size":5806,"mtime":1624961571966,"results":"90","hashOfConfig":"69"},{"size":4281,"mtime":1620463700106,"results":"91","hashOfConfig":"69"},{"size":874,"mtime":1620303704212,"results":"92","hashOfConfig":"69"},{"size":1062,"mtime":1625047670856,"results":"93","hashOfConfig":"69"},{"size":358,"mtime":1620461383517,"results":"94","hashOfConfig":"69"},{"size":8509,"mtime":1642669722562,"results":"95","hashOfConfig":"69"},{"size":175,"mtime":1620872442189,"results":"96","hashOfConfig":"69"},{"size":3600,"mtime":1624262294496,"results":"97","hashOfConfig":"69"},{"size":5503,"mtime":1625195949773,"results":"98","hashOfConfig":"69"},{"size":692,"mtime":1625197039836,"results":"99","hashOfConfig":"69"},{"size":462,"mtime":1624969810539,"results":"100","hashOfConfig":"69"},{"size":227,"mtime":1624969788862,"results":"101","hashOfConfig":"69"},{"size":2508,"mtime":1653209432942,"results":"102","hashOfConfig":"69"},{"size":1751,"mtime":1626094236910,"results":"103","hashOfConfig":"69"},{"size":6158,"mtime":1626311691074,"results":"104","hashOfConfig":"69"},{"size":7433,"mtime":1652084044708,"results":"105","hashOfConfig":"69"},{"size":890,"mtime":1642646485592,"results":"106","hashOfConfig":"69"},{"size":5201,"mtime":1652085778500,"results":"107","hashOfConfig":"69"},{"size":3727,"mtime":1642647100015,"results":"108","hashOfConfig":"69"},{"size":101,"mtime":1628218913367,"results":"109","hashOfConfig":"69"},{"size":1496,"mtime":1640680583276,"results":"110","hashOfConfig":"69"},{"size":1577,"mtime":1640680553521,"results":"111","hashOfConfig":"69"},{"size":1518,"mtime":1653224927879,"results":"112","hashOfConfig":"69"},{"size":1689,"mtime":1653208635087,"results":"113","hashOfConfig":"69"},{"size":493,"mtime":1639972237440,"results":"114","hashOfConfig":"80"},{"size":4386,"mtime":1651550813397,"results":"115","hashOfConfig":"69"},{"size":5530,"mtime":1651120060221,"results":"116","hashOfConfig":"69"},{"size":4923,"mtime":1651119173304,"results":"117","hashOfConfig":"69"},{"size":29495,"mtime":1653472094174,"results":"118","hashOfConfig":"69"},{"size":2894,"mtime":1652581512143,"results":"119","hashOfConfig":"69"},{"size":1862,"mtime":1653208570945,"results":"120","hashOfConfig":"69"},{"size":4788,"mtime":1653208011932,"results":"121","hashOfConfig":"69"},{"size":5619,"mtime":1653226076210,"results":"122","hashOfConfig":"69"},{"size":1923,"mtime":1653208980142,"results":"123","hashOfConfig":"69"},{"size":2368,"mtime":1653208957031,"results":"124","hashOfConfig":"69"},{"size":1655,"mtime":1652932429268,"results":"125","hashOfConfig":"69"},{"size":1304,"mtime":1652146752796,"results":"126","hashOfConfig":"69"},{"size":1413,"mtime":1652783621568,"results":"127","hashOfConfig":"69"},{"size":1762,"mtime":1652146643030,"results":"128","hashOfConfig":"69"},{"size":1700,"mtime":1653466420783,"results":"129","hashOfConfig":"69"},{"size":1058,"mtime":1653445351530,"results":"130","hashOfConfig":"69"},{"size":682,"mtime":1653464665487,"results":"131","hashOfConfig":"69"},{"size":928,"mtime":1653464590519,"results":"132","hashOfConfig":"69"},{"size":1620,"mtime":1653465294483,"results":"133","hashOfConfig":"69"},{"size":919,"mtime":1653465310526,"results":"134","hashOfConfig":"69"},{"size":1308,"mtime":1653466359785,"results":"135","hashOfConfig":"69"},{"size":1675,"mtime":1653471964909,"results":"136","hashOfConfig":"69"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},"b498p9",{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"139"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},"1p7rju2",{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"139"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"139"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"139"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"139"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"139"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"139"},"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\index.js",[],["281","282"],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\App.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\login\\login.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\api\\index.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\api\\ajax.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\utils\\memoryUtils.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\utils\\storageUtils.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\dashboard\\dashboard.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\header\\index.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\home\\home.jsx",["283"],"import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { Layout, Breadcrumb } from 'antd'\r\nimport Header from '../../components/header'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport './home.less'\r\nimport DashBoard from '../dashboard/dashboard'\r\nimport User from '../user/user'\r\nimport EditorScheme from '../editorscheme/editorscheme'\r\nimport Evaluation from '../evaluation/evaluation'\r\nimport Editor from '../editor/editor'\r\n\r\nconst { Content, Footer } = Layout\r\n/**\r\n * 管理路由组件\r\n */\r\nclass Dashboard extends React.Component {\r\n  render() {\r\n    const user = memoryUtils.user\r\n    if (!user || !user.id) {\r\n      //跳转到登录\r\n      return <Redirect to='/login' />\r\n    }\r\n\r\n    //面包屑同步\r\n    let path = this.props.location.pathname.split('/').filter((i) => i)\r\n    //console.log(path)\r\n    const breadcrumbNameMap = {\r\n      '/evaluation': '评价',\r\n      '/dashboard': '展示',\r\n      '/editorscheme': '方案',\r\n      //'/manage': '管理',\r\n      '/manage/user': '用户管理',\r\n    }\r\n    const extraBreadcrumbItems = path.map((_, index) => {\r\n      const url = `/${path.slice(0, index + 1).join('/')}`\r\n      return (\r\n        <Breadcrumb.Item key={url}>{breadcrumbNameMap[url]}</Breadcrumb.Item>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Header />\r\n          <Layout className='layout'>\r\n            <Breadcrumb className='layout-breadcrumb'>\r\n              {extraBreadcrumbItems}\r\n            </Breadcrumb>\r\n            <Content className='layout-content'>\r\n              <Switch>\r\n                <Route path='/evaluation' component={Evaluation} />\r\n                <Route path='/dashboard' component={DashBoard} />\r\n                <Route path='/editorscheme' component={EditorScheme} />\r\n                {/* <Route path='/editor' component={Editor} /> */}\r\n                <Route path='/manage/user' component={User} />\r\n                <Redirect to='/evaluation' />\r\n              </Switch>\r\n            </Content>\r\n          </Layout>\r\n\r\n          <Footer className='layout-footer'>推荐使用谷歌浏览器</Footer>\r\n        </Layout>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dashboard\r\n","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\manage\\manage.jsx",[],["284","285"],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\config\\menu-config.js",["286","287","288"],"import {\r\n  PieChartOutlined,\r\n  AppstoreOutlined,\r\n  BlockOutlined,\r\n  UserOutlined,\r\n  AuditOutlined,\r\n} from '@ant-design/icons'\r\n\r\nconst menuList = [\r\n  {\r\n    title: '评价',\r\n    path: '/evaluation',\r\n    icon: <AuditOutlined />,\r\n  },\r\n  // {\r\n  //   title: '展示',\r\n  //   path: '/dashboard',\r\n  //   icon: <PieChartOutlined />,\r\n  // },\r\n  {\r\n    title: '方案',\r\n    path: '/editorscheme',\r\n    icon: <AppstoreOutlined />,\r\n  },\r\n  // {\r\n  //   title: '编辑',\r\n  //   path: '/editor',\r\n  //   icon: <AppstoreOutlined />,\r\n  // },\r\n  // {\r\n  //   title: '管理',\r\n  //   path: '/manage',\r\n  //   icon: <BlockOutlined />,\r\n  //   children: [\r\n  //     {\r\n  //       title: '用户信息管理',\r\n  //       path: '/manage/user',\r\n  //       icon: <UserOutlined />,\r\n  //     },\r\n  //     {\r\n  //       title: '用户内容管理',\r\n  //       path: '/manage/usercontent',\r\n  //       icon: <UserOutlined />,\r\n  //     },\r\n  //   ],\r\n  // },\r\n]\r\n\r\nexport default menuList\r\n","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\user\\user.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\link-button\\index.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\register\\register.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\config\\cityselect-config.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\editor.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.page.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.config.jsx",["289"],"import { createEditorConfig } from './editor.utils'\r\nimport {\r\n  createColorProp,\r\n  createSelectProp,\r\n  createTextProp,\r\n} from './editor.props'\r\nimport LineExample from '../charts/lines'\r\nimport Bar3D from '../charts/bar3D'\r\nimport BarCharts from '../charts/bar'\r\nimport PieCharts from '../charts/pie'\r\nimport BarLabel from '../charts/barlabel'\r\nimport Bubble from '../charts/bubble'\r\nimport Funnel from '../charts/funnel'\r\nimport Nightingale from '../charts/nightingale'\r\nimport Radar from '../charts/radar'\r\nimport Scatter from '../charts/scatter'\r\nimport ThreeMapChart from '../../../components/map-chart/index'\r\n\r\nimport line from '../../../assets/images/charts/line-simple.webp'\r\nimport barlabel from '../../../assets/images/charts/bar-label-rotation.webp'\r\nimport bar from '../../../assets/images/charts/bar-simple.webp'\r\nimport bar3d from '../../../assets/images/charts/bar3d-punch-card.webp'\r\nimport bubble from '../../../assets/images/charts/bubble-gradient.webp'\r\nimport funnel from '../../../assets/images/charts/funnel.webp'\r\nimport pie from '../../../assets/images/charts/pie-simple.webp'\r\nimport pierose from '../../../assets/images/charts/pie-roseType-simple.webp'\r\nimport radar from '../../../assets/images/charts/radar.webp'\r\nimport scatter from '../../../assets/images/charts/scatter-simple.webp'\r\n\r\nexport const editorConfig = createEditorConfig()\r\n\r\neditorConfig.registryComponent('text', {\r\n  name: '文本',\r\n  preview: () => <span>文字描述</span>,\r\n  //size:{height, width}\r\n  render: (randomid, size, blockprops) => (\r\n    <span\r\n      id={randomid}\r\n      style={{\r\n        color: !blockprops.color ? '' : blockprops.color.hex,\r\n        fontSize: blockprops.fontsize,\r\n      }}\r\n    >\r\n      {blockprops.text || '渲染文本'}\r\n    </span>\r\n  ),\r\n  // resize: {\r\n  //   height: false,\r\n  //   width: true,\r\n  // },\r\n  blockprops: {\r\n    text: createTextProp('显示文本'),\r\n    color: createColorProp('字体颜色'),\r\n    fontsize: createSelectProp('字体大小', [\r\n      { label: '14px', value: '14px' },\r\n      { label: '18px', value: '18px' },\r\n      { label: '24px', value: '24px' },\r\n    ]),\r\n  },\r\n})\r\n\r\neditorConfig.registryComponent('linechart', {\r\n  name: '折线图',\r\n  // preview: () => <LineExample id='linepre' />,\r\n  //换成图片\r\n  preview: () => <img src={line} alt='折线图'></img>,\r\n  render: (randomid, size, blockprops) => (\r\n    <LineExample id={randomid} size={size} blockprops={blockprops} />\r\n  ),\r\n  //是否可以拖拽宽高\r\n  resize: {\r\n    height: true,\r\n    width: true,\r\n  },\r\n  blockprops: {\r\n    xAxis_name: createTextProp('x轴名称'),\r\n    xAxis_position: createSelectProp('x轴位置', [\r\n      { label: '顶部', value: 'top' },\r\n      { label: '底部', value: 'bottom' },\r\n    ]),\r\n    xAxis_data: createTextProp('x轴数据'),\r\n    yAxis_name: createTextProp('y轴名称'),\r\n    series_data: createTextProp('y轴数据'),\r\n    series_smooth: createSelectProp('平滑曲线', [\r\n      { label: '是', value: 'true' },\r\n      { label: '否', value: 'false' },\r\n    ]),\r\n  },\r\n})\r\n\r\neditorConfig.registryComponent('barchart', {\r\n  name: '柱状图',\r\n  // preview: () => <LineExample id='linepre' />,\r\n  //换成图片\r\n  preview: () => <img src={bar} alt='柱状图'></img>,\r\n  render: (randomid, size, blockprops) => (\r\n    <BarCharts id={randomid} size={size} blockprops={blockprops} />\r\n  ),\r\n  //是否可以拖拽宽高\r\n  resize: {\r\n    height: true,\r\n    width: true,\r\n  },\r\n  blockprops: {\r\n    xAxis_data: createTextProp('x轴数据'),\r\n    series_data: createTextProp('y轴数据'),\r\n  },\r\n})\r\n\r\neditorConfig.registryComponent('bar3d', {\r\n  name: '3D柱状图',\r\n  preview: () => <img src={bar3d} alt='3D柱状图'></img>,\r\n  render: (randomid, size) => <Bar3D id={randomid} size={size} />,\r\n  resize: {\r\n    height: true,\r\n    width: true,\r\n  },\r\n})\r\n\r\neditorConfig.registryComponent('barlabel', {\r\n  name: '柱状图标签旋转',\r\n  // preview: () => <LineExample id='linepre' />,\r\n  //换成图片\r\n  preview: () => <img src={barlabel} alt='柱状图标签旋转'></img>,\r\n  render: (randomid, size, blockprops) => (\r\n    <BarLabel id={randomid} size={size} blockprops={blockprops} />\r\n  ),\r\n  //是否可以拖拽宽高\r\n  resize: {\r\n    height: true,\r\n    width: true,\r\n  },\r\n  blockprops: {},\r\n})\r\n\r\neditorConfig.registryComponent('piechart', {\r\n  name: '饼图',\r\n  // preview: () => <LineExample id='linepre' />,\r\n  //换成图片\r\n  preview: () => <img src={pie} alt='饼图'></img>,\r\n  render: (randomid, size, blockprops) => (\r\n    <PieCharts id={randomid} size={size} blockprops={blockprops} />\r\n  ),\r\n  //是否可以拖拽宽高\r\n  resize: {\r\n    height: true,\r\n    width: true,\r\n  },\r\n  blockprops: {},\r\n})\r\n\r\neditorConfig.registryComponent('nightingale', {\r\n  name: '南丁格尔图',\r\n  // preview: () => <LineExample id='linepre' />,\r\n  //换成图片\r\n  preview: () => <img src={pierose} alt='南丁格尔图'></img>,\r\n  render: (randomid, size, blockprops) => (\r\n    <Nightingale id={randomid} size={size} blockprops={blockprops} />\r\n  ),\r\n  //是否可以拖拽宽高\r\n  resize: {\r\n    height: true,\r\n    width: true,\r\n  },\r\n  blockprops: {\r\n    data_value: createTextProp('数据值'),\r\n    data_name: createTextProp('数据名称'),\r\n    borderradius: createSelectProp('圆滑程度', [\r\n      { label: '低', value: 0 },\r\n      { label: '中', value: 8 },\r\n      { label: '高', value: 20 },\r\n    ]),\r\n    legend_position: createSelectProp('类别条目位置', [\r\n      { label: '顶部', value: 'top' },\r\n      { label: '底部', value: 'bottom' },\r\n    ]),\r\n    show_tool: createSelectProp('是否显示拓展工具', [\r\n      { label: '是', value: 'true' },\r\n      { label: '否', value: 'false' },\r\n    ]),\r\n  },\r\n})\r\n\r\neditorConfig.registryComponent('bubble', {\r\n  name: '气泡图',\r\n  // preview: () => <LineExample id='linepre' />,\r\n  //换成图片\r\n  preview: () => <img src={bubble} alt='气泡图'></img>,\r\n  render: (randomid, size, blockprops) => (\r\n    <Bubble id={randomid} size={size} blockprops={blockprops} />\r\n  ),\r\n  //是否可以拖拽宽高\r\n  resize: {\r\n    height: true,\r\n    width: true,\r\n  },\r\n  blockprops: {\r\n    title_text: createTextProp('标题'),\r\n    x_data: createTextProp('x轴坐标'),\r\n    y_data: createTextProp('y轴坐标'),\r\n    size: createTextProp('数据大小'),\r\n    name: createTextProp('数据项名称'),\r\n    type: createTextProp('所属类别'),\r\n  },\r\n})\r\n\r\neditorConfig.registryComponent('funnel', {\r\n  name: '漏斗图',\r\n  // preview: () => <LineExample id='linepre' />,\r\n  //换成图片\r\n  preview: () => <img src={funnel} alt='漏斗图'></img>,\r\n  render: (randomid, size, blockprops) => (\r\n    <Funnel id={randomid} size={size} blockprops={blockprops} />\r\n  ),\r\n  //是否可以拖拽宽高\r\n  resize: {\r\n    height: true,\r\n    width: true,\r\n  },\r\n  blockprops: {\r\n    title_text: createTextProp('标题'),\r\n    type: createTextProp('数据类别'),\r\n    data_value: createTextProp('数据值'),\r\n    data_name: createTextProp('数据名称'),\r\n  },\r\n})\r\n\r\neditorConfig.registryComponent('radar', {\r\n  name: '雷达图',\r\n  // preview: () => <LineExample id='linepre' />,\r\n  //换成图片\r\n  preview: () => <img src={radar} alt='雷达图'></img>,\r\n  render: (randomid, size, blockprops) => (\r\n    <Radar id={randomid} size={size} blockprops={blockprops} />\r\n  ),\r\n  //是否可以拖拽宽高\r\n  resize: {\r\n    height: true,\r\n    width: true,\r\n  },\r\n  blockprops: {},\r\n})\r\n\r\neditorConfig.registryComponent('scatter', {\r\n  name: '散点图',\r\n  // preview: () => <LineExample id='linepre' />,\r\n  //换成图片\r\n  preview: () => <img src={scatter} alt='散点图'></img>,\r\n  render: (randomid, size, blockprops) => (\r\n    <Scatter id={randomid} size={size} blockprops={blockprops} />\r\n  ),\r\n  //是否可以拖拽宽高\r\n  resize: {\r\n    height: true,\r\n    width: true,\r\n  },\r\n  blockprops: {},\r\n})\r\n\r\n// editorConfig.registryComponent('threemap', {\r\n//   name: '三维填充图',\r\n//   //换成图片\r\n//   preview: () => <span>三维填充图</span>,\r\n//   render: (randomid, size, blockprops) => (\r\n//     <ThreeMapChart id={randomid} size={size} results={blockprops} />\r\n//   ),\r\n//   //是否可以拖拽宽高\r\n//   resize: {\r\n//     height: true,\r\n//     width: true,\r\n//   },\r\n//   blockprops: {},\r\n// })\r\n","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editorblock.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.commander.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\plugins\\command.plugin.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\plugins\\keyboard-code.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.utils.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\plugins\\event.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\service\\dialog\\dialog.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\utils\\defer.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.resize.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editoroperator.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.props.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\hooks\\CallbackRef.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\hooks\\useUpadate.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editorscheme\\editorscheme.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\lines.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\bar3D.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\evaluation\\evaluation.jsx",["290","291"],"import { useState } from 'react'\r\nimport { Button, Steps, message } from 'antd'\r\nimport './evaluation.less'\r\nimport CriteriaTable from './components/criteriatable'\r\nimport DataTable from './components/datatable'\r\nimport { criteriaToDataColumns } from './components/criteriaToDataColumns'\r\nimport XLSX from 'xlsx'\r\nimport ResultTable from './components/resulttable'\r\nimport Visualizatin from './components/visualization'\r\nimport store from '../../utils/storageUtils'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Evaluation = () => {\r\n  //数据\r\n  const [state, setState] = useState({\r\n    criteria: {\r\n      dataSource: [],\r\n      count: 0,\r\n    },\r\n    dataset: [],\r\n    result: [],\r\n    loading: false,\r\n  })\r\n  //当前步骤\r\n  const [current, setCurrent] = useState(0)\r\n  const { Step } = Steps\r\n\r\n  /**\r\n   * 指标权重表格操作\r\n   */\r\n  //导入文件\r\n  const handleFile = (files) => {\r\n    setState({ ...state, loading: true })\r\n    const reader = new FileReader()\r\n    const file = files.file.originFileObj\r\n    //是否读取为二进制字符串\r\n    const rABS = !!reader.readAsBinaryString\r\n    if (rABS) {\r\n      reader.readAsBinaryString(file)\r\n    } else {\r\n      reader.readAsArrayBuffer(file)\r\n    }\r\n    reader.onload = (e) => {\r\n      const bstr = e.target.result\r\n      //读取完成的数据\r\n      const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array' })\r\n      const wsname = wb.SheetNames[0]\r\n      const ws = wb.Sheets[wsname]\r\n      const data = XLSX.utils.sheet_to_json(ws, { header: 0 })\r\n      setState({\r\n        ...state,\r\n        criteria: { dataSource: data.map(mapRows), count: data.length },\r\n      })\r\n    }\r\n  }\r\n  const mapRows = (row) => {\r\n    let _row = { ...row }\r\n    return {\r\n      key: _row['序号'],\r\n      name: _row['指标'],\r\n      type: _row['类型'],\r\n      weight: parseFloat(_row['权重'] * 100).toFixed(4),\r\n    }\r\n  }\r\n  //添加行\r\n  const handleAdd = () => {\r\n    const { dataSource, count } = state.criteria\r\n    let newcount = count + 1\r\n    let newdataSource = dataSource\r\n    newdataSource.push({\r\n      key: `${newcount}`,\r\n      name: '指标名',\r\n      type: 'benefit',\r\n      weight: '0',\r\n    })\r\n    setState({\r\n      ...state,\r\n      criteria: { dataSource: newdataSource, count: newcount },\r\n    })\r\n  }\r\n  //删除行\r\n  const handleDelete = (key) => {\r\n    const { dataSource, count } = state.criteria\r\n    let newdataSource = dataSource.filter((item) => item.key !== key)\r\n    let newcount = count - 1\r\n    setState({\r\n      ...state,\r\n      criteria: {\r\n        ...state.criteria,\r\n        dataSource: newdataSource,\r\n        count: newcount,\r\n      },\r\n    })\r\n  }\r\n  //修改\r\n  const handleSave = (newData) => {\r\n    setState({\r\n      ...state,\r\n      criteria: {\r\n        ...state.criteria,\r\n        dataSource: newData,\r\n      },\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 数据表格操作\r\n   */\r\n  //导入文件\r\n  const handleDataFile = (files) => {\r\n    setState({ ...state, loading: true })\r\n    const reader = new FileReader()\r\n    const file = files.file.originFileObj\r\n    //是否读取为二进制字符串\r\n    const rABS = !!reader.readAsBinaryString\r\n    if (rABS) {\r\n      reader.readAsBinaryString(file)\r\n    } else {\r\n      reader.readAsArrayBuffer(file)\r\n    }\r\n    reader.onload = (e) => {\r\n      const bstr = e.target.result\r\n      //读取完成的数据\r\n      const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array' })\r\n      const wsname = wb.SheetNames[0]\r\n      const ws = wb.Sheets[wsname]\r\n      const data = XLSX.utils.sheet_to_json(ws, { header: 0 })\r\n      setState({ ...state, dataset: data.map(mapDataRows), loading: false })\r\n    }\r\n  }\r\n  const mapDataRows = (row, idx) => {\r\n    let _row = { ...row }\r\n    _row.name = _row['城市']\r\n    delete _row['城市']\r\n    return {\r\n      ..._row,\r\n      city: _row.name,\r\n      key: idx + state.dataset.length,\r\n    }\r\n  }\r\n  //添加行\r\n  const handleDataAdd = () => {\r\n    const newdata = [...state.dataset]\r\n    const len = newdata.length\r\n    //需要添加的属性列\r\n    const otherdata = []\r\n    state.criteria.dataSource.map((column) =>\r\n      otherdata.push({ [column.name]: '0' })\r\n    )\r\n    //新增数据\r\n    newdata.push({\r\n      key: `${len}`,\r\n      city: '城市名',\r\n    })\r\n    //合并属性\r\n    let curdata = otherdata.reduce((acc, obj) => {\r\n      return Object.assign(acc, obj)\r\n    }, newdata[len])\r\n    newdata[len] = curdata\r\n    setState({\r\n      ...state,\r\n      dataset: newdata,\r\n    })\r\n    // console.log(state.dataset)\r\n  }\r\n  //修改\r\n  const handleDataSave = (newData) => {\r\n    setState({\r\n      ...state,\r\n      dataset: newData,\r\n    })\r\n  }\r\n  //删除行\r\n  const handleDataDelete = (key) => {\r\n    const curdata = [...state.dataset]\r\n    let newdata = curdata.filter((item) => item.key !== key)\r\n    setState({\r\n      ...state,\r\n      dataset: newdata,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 评价结果保存\r\n   */\r\n  const handleDataResult = (result) => {\r\n    setState({\r\n      ...state,\r\n      result,\r\n    })\r\n  }\r\n\r\n  const steps = [\r\n    {\r\n      title: '指标&权重',\r\n      content: (\r\n        <CriteriaTable\r\n          rows={state.criteria}\r\n          handleAdd={handleAdd}\r\n          handleDelete={handleDelete}\r\n          handleSave={handleSave}\r\n          handleFile={handleFile}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: '城市数据',\r\n      content: (\r\n        <DataTable\r\n          rows={state.dataset}\r\n          columns={criteriaToDataColumns(\r\n            state.criteria.dataSource,\r\n            handleDataDelete\r\n          )}\r\n          handleAdd={handleDataAdd}\r\n          handleFile={handleDataFile}\r\n          handleSave={handleDataSave}\r\n          loading={state.loading}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: '评价结果',\r\n      content: (\r\n        <ResultTable\r\n          criteria={state.criteria}\r\n          dataset={state.dataset}\r\n          result={state.result}\r\n          handleResult={handleDataResult}\r\n        />\r\n      ),\r\n    },\r\n    // {\r\n    //   title: '结果可视化',\r\n    //   content: <Visualizatin />,\r\n    // },\r\n  ]\r\n\r\n  //前进后退\r\n  const next = () => {\r\n    setCurrent(current + 1)\r\n  }\r\n  const prev = () => {\r\n    setCurrent(current - 1)\r\n  }\r\n\r\n  const saveData = () => {\r\n    // 将当前数据存入sessionStorage中\r\n    const user = store.getUser().id\r\n    const sessionData = JSON.stringify(state)\r\n    sessionStorage.setItem(`${user}`, sessionData)\r\n  }\r\n\r\n  const dashboard = {\r\n    pathname: '/dashboard',\r\n    // dashboardData: state,\r\n  }\r\n\r\n  return (\r\n    <div className='evaluation'>\r\n      <Steps current={current}>\r\n        {steps.map((item) => (\r\n          <Step key={item.title} title={item.title} />\r\n        ))}\r\n      </Steps>\r\n      <div className='steps-content'>{steps[current].content}</div>\r\n      <div className='steps-action'>\r\n        {current > 0 && (\r\n          <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n            上一步\r\n          </Button>\r\n        )}\r\n        {current < steps.length - 1 && (\r\n          <Button type='primary' onClick={() => next()}>\r\n            下一步\r\n          </Button>\r\n        )}\r\n        {current === steps.length - 1 && (\r\n          <Button type='primary' onClick={() => saveData()}>\r\n            <Link to={dashboard}>可视化评价结果</Link>\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Evaluation\r\n","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\evaluation\\components\\criteriaToDataColumns.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\evaluation\\components\\criteriatable.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\evaluation\\components\\datatable.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\evaluation\\components\\visualization.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\evaluation\\components\\resulttable.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\evaluation\\components\\topsis.js",[],["292","293"],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\bar.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\pie.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\border-container\\index.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\dashboard\\components\\custombartrend\\index.jsx",["294"],"import * as echarts from 'echarts'\r\nimport { useEffect } from 'react'\r\nimport './index.less'\r\n\r\nconst CustomBarTrend = (props) => {\r\n  const { criteria, dataset, result } = props\r\n  const { count, dataSource } = criteria\r\n\r\n  const initOption = () => {\r\n    var chartDom = document.getElementById('custombartrend')\r\n    var myChart = echarts.init(chartDom, 'dark')\r\n    var option\r\n\r\n    // var yearCount = 7\r\n    // var categoryCount = 30\r\n\r\n    // 指标\r\n    var xAxisData = []\r\n\r\n    var customData = []\r\n    // 城市\r\n    var legendData = []\r\n    // 城市数据\r\n    var dataList = []\r\n\r\n    // 折线图\r\n    legendData.push('趋势')\r\n\r\n    // 传入数据项\r\n    dataset.map((cur) => {\r\n      return legendData.push(cur.city)\r\n    })\r\n    var encodeY = []\r\n    const cityCount = dataset.length\r\n\r\n    for (let i = 0; i < cityCount; i++) {\r\n      legendData.push(dataset[i].city)\r\n      dataList.push([])\r\n      encodeY.push(1 + i)\r\n    }\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      // 指标名\r\n      const criName = dataSource[i].name\r\n\r\n      // xAxisData.push('category' + i)\r\n      xAxisData.push(criName)\r\n\r\n      // 趋势数据\r\n      var customVal = [i]\r\n      customData.push(customVal)\r\n\r\n      for (var j = 0; j < dataList.length; j++) {\r\n        // 当前指标下的城市数据\r\n        const curcityData = dataset[j][`${criName}`]\r\n        // var value =\r\n        //   j === 0\r\n        //     ? echarts.number.round(val, 2)\r\n        //     : echarts.number.round(\r\n        //         Math.max(0, dataList[j - 1][i] + (Math.random() - 0.5) * 200),\r\n        //         2\r\n        //       )\r\n        dataList[j].push(curcityData)\r\n        customVal.push(curcityData)\r\n      }\r\n    }\r\n\r\n    function renderItem(params, api) {\r\n      var xValue = api.value(0)\r\n      var currentSeriesIndices = api.currentSeriesIndices()\r\n      var barLayout = api.barLayout({\r\n        barGap: '30%',\r\n        barCategoryGap: '20%',\r\n        count: currentSeriesIndices.length - 1,\r\n      })\r\n\r\n      var points = []\r\n      for (var i = 0; i < currentSeriesIndices.length; i++) {\r\n        var seriesIndex = currentSeriesIndices[i]\r\n        if (seriesIndex !== params.seriesIndex) {\r\n          var point = api.coord([xValue, api.value(seriesIndex)])\r\n          point[0] += barLayout[i - 1].offsetCenter\r\n          point[1] -= 20\r\n          points.push(point)\r\n        }\r\n      }\r\n      var style = api.style({\r\n        stroke: api.visual('color'),\r\n        fill: null,\r\n      })\r\n\r\n      return {\r\n        type: 'polyline',\r\n        shape: {\r\n          points: points,\r\n        },\r\n        style: style,\r\n      }\r\n    }\r\n\r\n    option = {\r\n      backgroundColor: '',\r\n      tooltip: {\r\n        trigger: 'axis',\r\n      },\r\n      legend: {\r\n        data: legendData,\r\n      },\r\n      dataZoom: [\r\n        {\r\n          type: 'slider',\r\n          start: 0,\r\n          end: 7,\r\n        },\r\n        {\r\n          type: 'inside',\r\n          start: 0,\r\n          end: 7,\r\n        },\r\n      ],\r\n      xAxis: {\r\n        data: xAxisData,\r\n      },\r\n      yAxis: {},\r\n      grid: { top: '20%', bottom: '15%', left: '13%' },\r\n      series: [\r\n        {\r\n          type: 'custom',\r\n          name: '趋势',\r\n          renderItem: renderItem,\r\n          itemStyle: {\r\n            borderWidth: 2,\r\n          },\r\n          encode: {\r\n            x: 0,\r\n            y: encodeY,\r\n          },\r\n          data: customData,\r\n          z: 100,\r\n        },\r\n      ].concat(\r\n        dataList.map(function (data, index) {\r\n          return {\r\n            type: 'bar',\r\n            animation: false,\r\n            name: legendData[index + 1],\r\n            // itemStyle: {\r\n            //   opacity: 0.5,\r\n            // },\r\n            data: data,\r\n          }\r\n        })\r\n      ),\r\n    }\r\n\r\n    option && myChart.setOption(option)\r\n  }\r\n\r\n  useEffect(() => {\r\n    initOption()\r\n  })\r\n\r\n  return (\r\n    <div className='border-container'>\r\n      <div\r\n        id='custombartrend'\r\n        style={{\r\n          width: 450,\r\n          height: 400,\r\n          // background: 'rgba(255, 255, 255, .08)',\r\n        }}\r\n      ></div>\r\n      <span className='top-left border-span'></span>\r\n      <span className='top-right border-span'></span>\r\n      <span className='bottom-left border-span'></span>\r\n      <span className='bottom-right border-span'></span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomBarTrend\r\n","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\dashboard\\components\\sharedataset\\index.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\dashboard\\components\\mapchart\\index.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\index.jsx",["295","296"],"import React from 'react'\r\nimport * as THREE from 'three'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\nimport mapurl from './mapurl'\r\n// 填充图\r\nimport { borderline } from './FillChart/borderline'\r\nimport { tag, labelRenderer } from './FillChart/tag'\r\nimport { ExtrudeMesh } from './FillChart/ExtrudeMesh'\r\n// 气泡图\r\nimport { bubbleline } from './BubbleChart/line'\r\nimport { cirMesh } from './BubbleChart/cirMesh'\r\nimport { shapeMesh } from './BubbleChart/shapeMesh'\r\nimport { btag, blabelRenderer } from './BubbleChart/tag'\r\n// 柱状图\r\nimport { barline } from './BarChart/line'\r\nimport { prismMesh } from './BarChart/prismMesh'\r\nimport { baExtrudeMesh } from './BarChart/ExtrudeMesh'\r\nimport { batag, balabelRenderer } from './BarChart/tag'\r\n\r\nimport { Select } from 'antd'\r\nimport { Option } from 'antd/lib/mentions'\r\nimport './index.less'\r\n\r\nclass ThreeMapChart extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    // console.log(this.props)\r\n    this.state = {\r\n      // width: props.size.width || 300,\r\n      // height: props.size.height || 300,\r\n      width: 800,\r\n      height: 500,\r\n      charttype: 'fill',\r\n      lng: 0,\r\n      lat: 0,\r\n    }\r\n\r\n    this.threeRef = React.createRef()\r\n  }\r\n\r\n  componentDidMount() {\r\n    // 类型切换\r\n    if (this.state.charttype === 'bar') {\r\n      this.renderBar()\r\n    } else if (this.state.charttype === 'bubble') {\r\n      this.renderBubble()\r\n    } else {\r\n      this.renderFill()\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // 类型切换\r\n    if (this.state.charttype === 'bar') {\r\n      this.renderBar()\r\n    } else if (this.state.charttype === 'bubble') {\r\n      this.renderBubble()\r\n    } else {\r\n      this.renderFill()\r\n    }\r\n  }\r\n\r\n  // 填充图\r\n  renderFill = () => {\r\n    // 底图中心经纬度\r\n    // let lng = 0,\r\n    //   lat = 0\r\n\r\n    /**\r\n     * 填充图\r\n     * 创建场景对象Scene\r\n     */\r\n    var scene = new THREE.Scene()\r\n    //three.js文件加载类FileLoader：封装了XMLHttpRequest\r\n    var loader = new THREE.FileLoader()\r\n    loader.setResponseType('json')\r\n    // 组对象mapGroup是所有行政区边界Line模型的父对象\r\n    var mapGroup = new THREE.Group()\r\n    scene.add(mapGroup)\r\n    var lineGroup = new THREE.Group() //边界线组 底部\r\n    mapGroup.add(lineGroup)\r\n    var meshGroup = new THREE.Group() //轮廓Mesh组\r\n    mapGroup.add(meshGroup)\r\n    var lineGroup2 = new THREE.Group() //边界线组 顶部\r\n    mapGroup.add(lineGroup2)\r\n    lineGroup.position.z = -0.01 //适当偏移解决深度冲突\r\n    lineGroup2.position.z = 0.01 //适当偏移解决深度冲突\r\n\r\n    // 加载数据\r\n    const arr = []\r\n    this.props.result.map((cur) =>\r\n      arr.push({ name: `${cur.city}市`, value: Number(cur.score) })\r\n    )\r\n    const dataJson = JSON.stringify({ arr })\r\n\r\n    loader.load(`data:,${dataJson}`, function (data) {\r\n      var gdpObj = {} //每个省份的名字作为属性，属性值是国家对应GDP\r\n      var color1 = new THREE.Color(0xffffff)\r\n      var color2 = new THREE.Color(0xff8888) //GDP最高对应颜色\r\n      var gdpMax = arr.reduce((acc, cur) => Math.max(acc, cur.value), 0) //设置一个基准值,以最高的gdp为准\r\n      data.arr.forEach(function (obj) {\r\n        var gdp = obj.value //当前省份GDP\r\n        gdpObj[obj.name] = gdp //每个省份的名字作为属性，属性值是国家对应GDP\r\n      })\r\n\r\n      //  加载 \"省份.json\"，结构和./china.json 一样，地级市对应省份\r\n      const region = JSON.parse(localStorage.getItem('user_key')).region\r\n      const mapname = region.toString().substring(0, 3)\r\n\r\n      const mapData = mapurl[`${mapname}`]\r\n      // const mapData = require(`../../assets/maps/${mapname}.json`)\r\n      loader.load(mapData, function (data2) {\r\n        // 设置地图中心经纬度\r\n        // lng = data2.features[0].properties.center[0]\r\n        // lat = data2.features[0].properties.center[1]\r\n\r\n        // 访问所有子行政区(地级市)边界坐标数据：data.features\r\n        data2.features.forEach(function (area) {\r\n          // \"Polygon\"：省份area有一个封闭轮廓\r\n          //\"MultiPolygon\"：省份area有多个封闭轮廓\r\n          if (area.geometry.type === 'Polygon') {\r\n            // 把\"Polygon\"和\"MultiPolygon\"的geometry.coordinates数据结构处理为一致\r\n            area.geometry.coordinates = [area.geometry.coordinates]\r\n          }\r\n          var name = area.properties.name //地级市名\r\n          // height：行政区轮廓拉伸高度，和gdp大小正相关，不过注意相机渲染范围(或者说地图尺寸范围)\r\n          var height = gdpObj[name] / 50 //拉伸高度\r\n          var mesh = ExtrudeMesh(area.geometry.coordinates, height)\r\n          mesh.name = name //设置mesh对应的地级市名字\r\n          meshGroup.add(mesh) //地级市轮廓拉伸Mesh插入组对象mapGroup\r\n          // 颜色插值计算\r\n          var color = color1\r\n            .clone()\r\n            .lerp(color2.clone(), gdpObj[mesh.name] / gdpMax)\r\n          mesh.material.color.copy(color)\r\n          mesh.gdp = gdpObj[mesh.name] //mesh自定义一个gdp属性，用于标签设置\r\n          mesh.color = color //记录下自身的颜色，以便选中改变mesh颜色的时候，不选中状态再改变回来\r\n\r\n          // 解析所有封闭轮廓边界坐标area.geometry.coordinates\r\n          var line = borderline(area.geometry.coordinates)\r\n          lineGroup.add(line) //地级市边界轮廓插入组对象lineGroup\r\n          var line2 = line.clone()\r\n          line2.position.z = height //顶部边界线跟随轮廓拉伸高度保持一致\r\n          lineGroup2.add(line2)\r\n        })\r\n      })\r\n    })\r\n\r\n    /**\r\n     * 光源设置\r\n     */\r\n    // 平行光1\r\n    var directionalLight = new THREE.DirectionalLight(0xffffff, 0.9)\r\n    directionalLight.position.set(400, 200, 300)\r\n    scene.add(directionalLight)\r\n    // 平行光2\r\n    var directionalLight2 = new THREE.DirectionalLight(0xffffff, 0.9)\r\n    directionalLight2.position.set(-400, -200, -300)\r\n    scene.add(directionalLight2)\r\n    //环境光\r\n    var ambient = new THREE.AmbientLight(0xffffff, 0.4)\r\n    scene.add(ambient)\r\n    //three.js辅助坐标系\r\n    var axesHelper = new THREE.AxesHelper(300)\r\n    scene.add(axesHelper)\r\n    /**\r\n     * 相机设置\r\n     */\r\n    var width = this.state.width //窗口宽度\r\n    var height = this.state.height //窗口高度\r\n    var k = width / height //窗口宽高比\r\n    // var s = 200;\r\n    var s = 3 //根据包围盒大小(行政区域经纬度分布范围大小)设置渲染范围\r\n    //创建相机对象\r\n    var camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 1, 1000)\r\n    // camera.position.set(200, 300, 200); //设置相机位置\r\n    // camera.position.set(113.51, 33.87, 200); //沿着z轴观察\r\n    // 通过OrbitControls在控制台打印相机位置选择一个合适的位置\r\n\r\n    var center = new THREE.Vector3()\r\n    setTimeout(() => {\r\n      //包围盒计算\r\n      var box3 = new THREE.Box3()\r\n      box3.expandByObject(meshGroup)\r\n      var scaleV3 = new THREE.Vector3()\r\n      box3.getSize(scaleV3)\r\n\r\n      box3.getCenter(center)\r\n      camera.position.set(center.x, center.y, 200)\r\n      camera.lookAt(center.x, center.y, 0) //指向地图的几何中心\r\n    }, 600)\r\n\r\n    /**\r\n     * 创建渲染器对象\r\n     */\r\n    var renderer = new THREE.WebGLRenderer({\r\n      antialias: true, //开启锯齿\r\n      alpha: true,\r\n    })\r\n    renderer.setSize(width, height) //设置渲染区域尺寸\r\n    renderer.setClearColor(0xeeeeee, 0.0) //设置背景颜色\r\n    // console.log(document.querySelector('#mapchart>canvas'))\r\n    const oldNode = document.querySelector('#mapchart > canvas')\r\n    if (oldNode) {\r\n      this.threeRef.current.removeChild(oldNode)\r\n    }\r\n    this.threeRef.current.appendChild(renderer.domElement) //body元素中插入canvas对象\r\n\r\n    // 渲染函数\r\n    function render() {\r\n      //渲染场景中的HTMl元素包装成的CSS2模型对象\r\n      labelRenderer.render(scene, camera)\r\n      renderer.render(scene, camera) //执行渲染操作\r\n      requestAnimationFrame(render) //请求再次执行渲染函数render，渲染下一帧\r\n    }\r\n    render()\r\n    //创建控件对象  控件可以监听鼠标的变化，改变相机对象的属性\r\n    // 旋转、缩放用于代码调试\r\n\r\n    var controls = new OrbitControls(camera, renderer.domElement)\r\n    // 相机控件与.lookAt()无效( .target属性 )\r\n    setTimeout(() => {\r\n      controls.target.set(center.x, center.y, 0)\r\n      controls.update() //update()函数内会执行camera.lookAt(controls.target)\r\n    }, 600)\r\n\r\n    /**\r\n     * 射线投射器`Raycaster`的射线拾取选中网格模型对象函数choose()\r\n     * 选中的网格模型变为半透明效果\r\n     */\r\n    var label = tag()\r\n    scene.add(label) //标签插入场景中\r\n    // console.log(label);\r\n    var chooseMesh = null //标记鼠标拾取到的mesh\r\n    function choose(event) {\r\n      if (chooseMesh) {\r\n        // 把上次选中的mesh设置为原来的颜色\r\n        chooseMesh.material.color.copy(chooseMesh.color)\r\n      } else {\r\n        label.element.style.visibility = 'hidden' //没有选中mesh，隐藏标签\r\n      }\r\n      var Sx = event.clientX - renderer.domElement.getBoundingClientRect().left //鼠标单击位置横坐标\r\n      var Sy = event.clientY - renderer.domElement.getBoundingClientRect().top //鼠标单击位置纵坐标\r\n      //屏幕坐标转WebGL标准设备坐标\r\n      var x = (Sx / renderer.domElement.offsetWidth) * 2 - 1 //WebGL标准设备横坐标\r\n      var y = -(Sy / renderer.domElement.offsetHeight) * 2 + 1 //WebGL标准设备纵坐标\r\n      //创建一个射线投射器`Raycaster`\r\n      var raycaster = new THREE.Raycaster()\r\n      //通过鼠标单击位置标准设备坐标和相机参数计算射线投射器`Raycaster`的射线属性.ray\r\n      raycaster.setFromCamera(new THREE.Vector2(x, y), camera)\r\n      //返回.intersectObjects()参数中射线选中的网格模型对象\r\n      // 未选中对象返回空数组[],选中一个数组1个元素，选中两个数组两个元素\r\n      var intersects = raycaster.intersectObjects(meshGroup.children)\r\n      // console.log(\"射线器返回的对象\", intersects);\r\n      // console.log(\"射线投射器返回的对象 点point\", intersects[0].point);\r\n      // console.log(\"射线投射器的对象 几何体\",intersects[0].object.geometry.vertices)\r\n      // intersects.length大于0说明，说明选中了模型\r\n      if (intersects.length > 0) {\r\n        chooseMesh = intersects[0].object\r\n        chooseMesh.material.color.set(0x00ffff) //选中改变颜色\r\n        // 根据鼠标位置设置标签位置(射线与mesh表面相交点世界坐标intersects[0].point)\r\n        // intersects[0].point.y+=0.5;//偏移\r\n        label.position.copy(intersects[0].point)\r\n        // console.log(chooseMesh.center)\r\n        label.element.innerHTML =\r\n          chooseMesh.name + '评价得分：' + chooseMesh.gdp.toFixed(2)\r\n        label.element.style.visibility = 'visible'\r\n      } else {\r\n        chooseMesh = null\r\n      }\r\n    }\r\n    // addEventListener('click', choose); // 监听窗口鼠标单击事件\r\n    window.addEventListener('mousemove', choose) // 监听窗口鼠标滑动事件\r\n  }\r\n\r\n  // 气泡图\r\n  renderBubble = () => {\r\n    /**\r\n     * 创建场景对象Scene\r\n     */\r\n    var scene = new THREE.Scene()\r\n    //three.js文件加载类FileLoader：封装了XMLHttpRequest\r\n    var loader = new THREE.FileLoader()\r\n    loader.setResponseType('json')\r\n    // 组对象mapGroup是所有国家边界Line模型的父对象\r\n    var mapGroup = new THREE.Group()\r\n    scene.add(mapGroup)\r\n    var lineGroup = new THREE.Group() //边界线组\r\n    mapGroup.add(lineGroup)\r\n    var meshGroup = new THREE.Group() //轮廓Mesh组\r\n    mapGroup.add(meshGroup)\r\n    lineGroup.position.z += 0.1 //适当偏移解决深度冲突\r\n\r\n    //  加载./china.json，结构和world.json 一样，省份对应国家\r\n    const region = JSON.parse(localStorage.getItem('user_key')).region\r\n    const mapname = region.toString().substring(0, 3)\r\n    const mapData = mapurl[`${mapname}`]\r\n\r\n    const city_cdn = {}\r\n\r\n    loader.load(mapData, function (data) {\r\n      // 访问所有省份边界坐标数据：data.features\r\n      data.features.forEach(function (area) {\r\n        city_cdn[area.properties.name] = area.properties.center\r\n        // \"Polygon\"：省份area有一个封闭轮廓\r\n        //\"MultiPolygon\"：省份area有多个封闭轮廓\r\n        if (area.geometry.type === 'Polygon') {\r\n          // 把\"Polygon\"和\"MultiPolygon\"的geometry.coordinates数据结构处理为一致\r\n          area.geometry.coordinates = [area.geometry.coordinates]\r\n        }\r\n        // 解析所有封闭轮廓边界坐标area.geometry.coordinates\r\n        lineGroup.add(bubbleline(area.geometry.coordinates)) //省份边界轮廓插入组对象mapGroup\r\n        meshGroup.add(shapeMesh(area.geometry.coordinates)) //省份轮廓Mesh插入组对象mapGroup\r\n      })\r\n      return city_cdn\r\n    })\r\n\r\n    var cirGroup = new THREE.Group()\r\n    cirGroup.position.z = 0.2 //适当偏移，以免深度冲突\r\n    scene.add(cirGroup)\r\n\r\n    //加载数据\r\n    let dataJson = {}\r\n    setTimeout(() => {\r\n      const arr = []\r\n      // console.log(this.props.dataset)\r\n      this.props.dataset.map((cur) =>\r\n        arr.push({\r\n          name: `${cur.city}市`,\r\n          value: Number(cur['地区生产总值（亿元）']),\r\n          coordinate: city_cdn[`${cur.city}市`],\r\n        })\r\n      )\r\n      dataJson = JSON.stringify({ arr })\r\n      loadData()\r\n    }, 200)\r\n    // ./数据.json包含城市的经纬度坐标和对应的PM2.5值\r\n    const loadData = () =>\r\n      loader.load(`data:,${dataJson}`, function (data) {\r\n        // GDP最高对应红色，GDP最低对应白色\r\n        var color1 = new THREE.Color(0x00ffcc) //0x00ffc\r\n        var color2 = new THREE.Color(0xff6666) //0xff6666\r\n\r\n        var pmArr = [] //所有pm2.5数据集合\r\n        data.arr.forEach(function (obj) {\r\n          var pm25 = obj.value //访问数据PM2.5值\r\n          pmArr.push(pm25)\r\n        })\r\n        pmArr.sort(compareNum)\r\n        // console.log('排序后pm2.5',pmArr);\r\n        var Max = pmArr[pmArr.length - 1] //PM2.5最大值作为基准值\r\n        data.arr.forEach(function (obj) {\r\n          var pm25 = obj.value\r\n          // 颜色插值计算\r\n          var color = color1.clone().lerp(color2.clone(), pm25 / Max)\r\n          // 气泡大小和pm2.5正相关，同时注意根据相机渲染范围来设置合适大小\r\n          var mesh = cirMesh(\r\n            obj.coordinate[0],\r\n            obj.coordinate[1],\r\n            (pm25 / Max) * 0.5,\r\n            color.getHex()\r\n          )\r\n          cirGroup.add(mesh)\r\n          mesh.name = obj.name\r\n          mesh.pm25 = pm25 //mesh自定义一个gdp属性，用于标签设置\r\n          mesh.coordinate = obj.coordinate //用于控制标签位置\r\n          mesh.color = color //记录下自身的颜色，以便选中改变mesh颜色的时候，不选中状态再改变回来\r\n        })\r\n      })\r\n    // 数组排序规则\r\n    function compareNum(num1, num2) {\r\n      if (num1 < num2) {\r\n        return -1\r\n      } else if (num1 > num2) {\r\n        return 1\r\n      } else {\r\n        return 0\r\n      }\r\n    }\r\n    //three.js辅助坐标系\r\n    var axesHelper = new THREE.AxesHelper(300)\r\n    scene.add(axesHelper)\r\n    /**\r\n     * 相机设置\r\n     */\r\n    var width = this.state.width //窗口宽度\r\n    var height = this.state.height //窗口高度\r\n    var k = width / height //窗口宽高比\r\n    // var s = 200;\r\n    var s = 3 //根据包围盒大小(行政区域经纬度分布范围大小)设置渲染范围\r\n    //创建相机对象\r\n    var camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 1, 1000)\r\n    // camera.position.set(200, 300, 200); //设置相机位置\r\n\r\n    var center = new THREE.Vector3()\r\n    setTimeout(() => {\r\n      //包围盒计算\r\n      var box3 = new THREE.Box3()\r\n      box3.expandByObject(meshGroup)\r\n      var scaleV3 = new THREE.Vector3()\r\n      box3.getSize(scaleV3)\r\n\r\n      box3.getCenter(center)\r\n      camera.position.set(center.x, center.y, 200) //沿着z轴观察\r\n      camera.lookAt(center.x, center.y, 0) //指向地图的几何中心\r\n    }, 500)\r\n    //  camera.position.set(104, 35, 200)\r\n    //  camera.lookAt(104, 35, 0) //指向中国地图的几何中心\r\n    /**\r\n     * 创建渲染器对象\r\n     */\r\n    var renderer = new THREE.WebGLRenderer({\r\n      antialias: true, //开启锯齿\r\n    })\r\n    renderer.setSize(width, height) //设置渲染区域尺寸\r\n    renderer.setClearColor(0xeeeeee, 0.0) //设置背景颜色\r\n    const oldNode = document.querySelector('#mapchart > canvas')\r\n    if (oldNode) {\r\n      this.threeRef.current.removeChild(oldNode)\r\n    }\r\n    this.threeRef.current.appendChild(renderer.domElement) //body元素中插入canvas对象\r\n\r\n    // 渲染函数\r\n    function render() {\r\n      //渲染场景中的HTMl元素包装成的CSS2模型对象\r\n      blabelRenderer.render(scene, camera)\r\n      renderer.render(scene, camera) //执行渲染操作\r\n      requestAnimationFrame(render) //请求再次执行渲染函数render，渲染下一帧\r\n    }\r\n    render()\r\n    //创建控件对象  控件可以监听鼠标的变化，改变相机对象的属性\r\n    // 旋转、缩放用于代码调试\r\n\r\n    var controls = new OrbitControls(camera, renderer.domElement)\r\n    // 相机控件与.lookAt()无效( .target属性 )\r\n    setTimeout(() => {\r\n      controls.target.set(center.x, center.y, 0)\r\n      controls.update() //update()函数内会执行camera.lookAt(controls.target)\r\n    }, 600)\r\n    /**\r\n     * 射线投射器`Raycaster`的射线拾取选中网格模型对象函数choose()\r\n     * 选中的网格模型变为半透明效果\r\n     */\r\n    var pm = document.getElementById('pm')\r\n    var city = document.getElementById('city')\r\n    var div = document.getElementById('tag')\r\n    var label = btag(div)\r\n    scene.add(label) //标签插入场景中\r\n    var chooseMesh = null //标记鼠标拾取到的mesh\r\n    function choose(event) {\r\n      if (chooseMesh) {\r\n        // 把上次选中的mesh设置为原来的颜色\r\n        chooseMesh.material.color.copy(chooseMesh.color)\r\n      } else {\r\n        label.element.style.visibility = 'hidden' //没有选中mesh，隐藏标签\r\n      }\r\n      var Sx = event.clientX - renderer.domElement.getBoundingClientRect().left //鼠标单击位置横坐标\r\n      var Sy = event.clientY - renderer.domElement.getBoundingClientRect().top //鼠标单击位置纵坐标\r\n      //屏幕坐标转WebGL标准设备坐标\r\n      var x = (Sx / renderer.domElement.offsetWidth) * 2 - 1 //WebGL标准设备横坐标\r\n      var y = -(Sy / renderer.domElement.offsetHeight) * 2 + 1 //WebGL标准设备纵坐标\r\n      //创建一个射线投射器`Raycaster`\r\n      var raycaster = new THREE.Raycaster()\r\n      //通过鼠标单击位置标准设备坐标和相机参数计算射线投射器`Raycaster`的射线属性.ray\r\n      raycaster.setFromCamera(new THREE.Vector2(x, y), camera)\r\n      //返回.intersectObjects()参数中射线选中的网格模型对象\r\n      // 未选中对象返回空数组[],选中一个数组1个元素，选中两个数组两个元素\r\n      var intersects = raycaster.intersectObjects(cirGroup.children)\r\n      // console.log(\"射线器返回的对象\", intersects);\r\n      // console.log(\"射线投射器返回的对象 点point\", intersects[0].point);\r\n      // intersects.length大于0说明，说明选中了模型\r\n      if (intersects.length > 0) {\r\n        chooseMesh = intersects[0].object\r\n        chooseMesh.material.color.set(0x00ffff) //选中改变颜色\r\n        label.position.set(\r\n          chooseMesh.coordinate[0],\r\n          chooseMesh.coordinate[1],\r\n          0\r\n        )\r\n        // console.log(chooseMesh.name)\r\n        pm.innerHTML = chooseMesh.pm25\r\n        city.innerHTML = chooseMesh.name\r\n        label.element.style.visibility = 'visible'\r\n      } else {\r\n        chooseMesh = null\r\n      }\r\n    }\r\n    // addEventListener('click', choose); // 监听窗口鼠标单击事件\r\n    window.addEventListener('mousemove', choose) // 监听窗口鼠标滑动事件\r\n  }\r\n\r\n  renderBar = () => {\r\n    /**\r\n     * 创建场景对象Scene\r\n     */\r\n    var scene = new THREE.Scene()\r\n    //three.js文件加载类FileLoader：封装了XMLHttpRequest\r\n    var loader = new THREE.FileLoader()\r\n    loader.setResponseType('json')\r\n    // 组对象mapGroup是所有国家边界Line模型的父对象\r\n    var mapGroup = new THREE.Group()\r\n    scene.add(mapGroup)\r\n    var lineGroup = new THREE.Group() //边界线组\r\n    mapGroup.add(lineGroup)\r\n    var meshGroup = new THREE.Group() //轮廓Mesh组\r\n    mapGroup.add(meshGroup)\r\n    var extrudeHeight = 0.5 //地图轮廓拉伸高度\r\n    lineGroup.position.z = extrudeHeight + extrudeHeight * 0.1 //适当偏移解决深度冲突\r\n\r\n    // 加载数据\r\n    const arr = []\r\n    this.props.dataset.map((cur) =>\r\n      arr.push({\r\n        name: `${cur.city}市`,\r\n        value: Number(cur['互联网宽带接入用户（万户）']),\r\n      })\r\n    )\r\n    const dataJson = JSON.stringify({ arr })\r\n    loader.load(`data:,${dataJson}`, function (data) {\r\n      var gdpObj = {} //每个省份的名字作为属性，属性值是国家对应GDP\r\n      var gdpMax = arr.reduce((acc, cur) => Math.max(acc, cur.value), 0) //设置一个基准值,以最高的广州gdp为准\r\n      data.arr.forEach(function (obj) {\r\n        var gdp = obj.value //当前省份GDP\r\n        gdpObj[obj.name] = gdp //每个省份的名字作为属性，属性值是国家对应GDP\r\n      })\r\n\r\n      var prismGroup = new THREE.Group()\r\n      prismGroup.position.z = extrudeHeight //适当偏移，以免深度冲突\r\n      scene.add(prismGroup)\r\n\r\n      //  加载地理位置json，省份对应国家\r\n      const region = JSON.parse(localStorage.getItem('user_key')).region\r\n      const mapname = region.toString().substring(0, 3)\r\n      const mapData = mapurl[`${mapname}`]\r\n\r\n      loader.load(mapData, function (data2) {\r\n        var color1 = new THREE.Color(0xffff00)\r\n        var color2 = new THREE.Color(0xff0000) //最大数值对应柱子颜\r\n        // 访问所有省份边界坐标数据：data.features\r\n        data2.features.forEach(function (area) {\r\n          // \"Polygon\"：省份area有一个封闭轮廓\r\n          //\"MultiPolygon\"：省份area有多个封闭轮廓\r\n          if (area.geometry.type === 'Polygon') {\r\n            // 把\"Polygon\"和\"MultiPolygon\"的geometry.coordinates数据结构处理为一致\r\n            area.geometry.coordinates = [area.geometry.coordinates]\r\n          }\r\n          // 解析所有封闭轮廓边界坐标area.geometry.coordinates\r\n          lineGroup.add(barline(area.geometry.coordinates)) //省份边界轮廓插入组对象mapGroup\r\n          // height：根据行政区尺寸范围设置，比如高度设置为地图尺寸范围的2%、5%等，过小感觉不到高度，过大太高了\r\n          var height = extrudeHeight //拉伸高度\r\n          meshGroup.add(ExtrudeMesh(area.geometry.coordinates, height)) //省份轮廓拉伸Mesh插入组对象mapGroup\r\n\r\n          var name = area.properties.name //省份名\r\n          if (name) {\r\n            var gdp = gdpObj[name]\r\n            if (gdp === undefined) console.log(area.properties)\r\n            var center = area.properties.center //行政区几何中心经纬度坐标\r\n            // console.log(name,gdp,center)\r\n            // 颜色插值计算\r\n            var color = color1.clone().lerp(color2.clone(), gdp / gdpMax)\r\n            var barHeight = (gdp / gdpMax) * 5\r\n            var mesh = prismMesh(\r\n              center[0],\r\n              center[1],\r\n              0.3,\r\n              barHeight,\r\n              color.getHex()\r\n            )\r\n            prismGroup.add(mesh)\r\n\r\n            // 柱子上方标注标签\r\n            var tag2D = batag(name, gdp)\r\n            //  var center = area.properties.center //行政区几何中心经纬度坐标\r\n            tag2D.position.set(center[0], center[1], barHeight - extrudeHeight)\r\n            scene.add(tag2D)\r\n            setTimeout(() => {\r\n              scene.remove(tag2D)\r\n            }, 10000)\r\n          }\r\n        })\r\n        // 地图底部边界线\r\n        var lineGroup2 = lineGroup.clone()\r\n        mapGroup.add(lineGroup2)\r\n        lineGroup2.position.z = -extrudeHeight * 0.1 //适当偏移解决深度冲突\r\n      })\r\n    })\r\n\r\n    /**\r\n     * 光源设置\r\n     */\r\n    // 平行光1\r\n    var directionalLight = new THREE.DirectionalLight(0xffffff, 0.9)\r\n    directionalLight.position.set(400, 200, 300)\r\n    scene.add(directionalLight)\r\n    // 平行光2\r\n    var directionalLight2 = new THREE.DirectionalLight(0xffffff, 0.9)\r\n    directionalLight2.position.set(-400, -200, -300)\r\n    scene.add(directionalLight2)\r\n    //环境光\r\n    var ambient = new THREE.AmbientLight(0xffffff, 0.4)\r\n    scene.add(ambient)\r\n    //three.js辅助坐标系\r\n    var axesHelper = new THREE.AxesHelper(300)\r\n    scene.add(axesHelper)\r\n    /**\r\n     * 相机设置\r\n     */\r\n    var width = this.state.width //窗口宽度\r\n    var height = this.state.height //窗口高度\r\n    var k = width / height //窗口宽高比\r\n    // var s = 200;\r\n    var s = 3 //根据包围盒大小(行政区域经纬度分布范围大小)设置渲染范围\r\n    //创建相机对象\r\n    var camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 1, 1000)\r\n    // camera.position.set(200, 300, 200); //设置相机位置\r\n    // camera.position.set(104, 35, 200); //沿着z轴观察\r\n    // 通过OrbitControls在控制台打印相机位置选择一个合适的位置\r\n    var center = new THREE.Vector3()\r\n    setTimeout(() => {\r\n      //包围盒计算\r\n      var box3 = new THREE.Box3()\r\n      box3.expandByObject(meshGroup)\r\n      var scaleV3 = new THREE.Vector3()\r\n      box3.getSize(scaleV3)\r\n      box3.getCenter(center)\r\n      camera.position.set(center.x, center.y, 200)\r\n      camera.lookAt(center.x, center.y, 0) //指向地图的几何中心\r\n    }, 500)\r\n    // var camera = new THREE.PerspectiveCamera(45, width / height, 0.01, 1500);\r\n    // // 根据渲染范围或说地图范围设置相机的距离\r\n    // // camera.position.set(104, 35, 50);//沿着z轴方向\r\n    // camera.position.set(104, 35-25, 40);\r\n    // camera.lookAt(104, 35, 0);\r\n    /**\r\n     * 创建渲染器对象\r\n     */\r\n    var renderer = new THREE.WebGLRenderer({\r\n      antialias: true, //开启锯齿\r\n    })\r\n    renderer.setSize(width, height) //设置渲染区域尺寸\r\n    renderer.setClearColor(0xeeeeee, 0.0) //设置背景颜色\r\n    const oldNode = document.querySelector('#mapchart > canvas')\r\n    if (oldNode) {\r\n      this.threeRef.current.removeChild(oldNode)\r\n    }\r\n    this.threeRef.current.appendChild(renderer.domElement) //body元素中插入canvas对象\r\n\r\n    // 渲染函数\r\n    function render() {\r\n      //渲染场景中的HTMl元素包装成的CSS3模型对象\r\n      labelRenderer.render(scene, camera)\r\n      renderer.render(scene, camera) //执行渲染操作\r\n      requestAnimationFrame(render) //请求再次执行渲染函数render，渲染下一帧\r\n      // console.log(camera.position);\r\n    }\r\n    render()\r\n    //创建控件对象  控件可以监听鼠标的变化，改变相机对象的属性\r\n    // 旋转、缩放用于代码调试\r\n\r\n    var controls = new OrbitControls(camera, renderer.domElement)\r\n    // 相机控件与.lookAt()无效( .target属性 )\r\n    setTimeout(() => {\r\n      controls.target.set(center.x, center.y, 0)\r\n      controls.update() //update()函数内会执行camera.lookAt(controls.target)\r\n    }, 600)\r\n  }\r\n\r\n  handleChange = (value) => {\r\n    // 获取value\r\n    this.setState({\r\n      charttype: `${value}`,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='mapcontent'>\r\n        <div>\r\n          <Select\r\n            defaultValue='fill'\r\n            bordered={false}\r\n            style={{ color: '#0ff' }}\r\n            onChange={this.handleChange}\r\n          >\r\n            <Option value='bubble'>气泡图</Option>\r\n            <Option value='bar'>柱状图</Option>\r\n            <Option value='fill'>填充图</Option>\r\n          </Select>\r\n        </div>\r\n        <div id='mapchart' ref={this.threeRef}></div>\r\n        <div\r\n          id='tag'\r\n          style={{\r\n            visibility: 'hidden',\r\n            color: '#ffffff',\r\n            background: 'rgba(0, 0, 0, 0.2)',\r\n            padding: '6px 16px',\r\n            borderRadius: '5px',\r\n          }}\r\n        >\r\n          <div>\r\n            <span>城市：</span>\r\n            <span id='city' style={{ color: '#00ffff' }}>\r\n              郑州\r\n            </span>\r\n          </div>\r\n          <div\r\n            style={{\r\n              height: '1px',\r\n              background: 'rgb(190, 190, 190)',\r\n              marginTop: '4px',\r\n              marginBottom: '4px',\r\n            }}\r\n          ></div>\r\n          <div>\r\n            <span>地区生产总值：</span>\r\n            <span id='pm' style={{ color: '#00ffff' }}>\r\n              19\r\n            </span>\r\n            <span>亿元</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ThreeMapChart\r\n","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\mapurl.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\radar.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\barlabel.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\bubble.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\nightingale.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\funnel.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\charts\\scatter.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\FillChart\\ExtrudeMesh.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\FillChart\\tag.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\FillChart\\borderline.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\BubbleChart\\line.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\BubbleChart\\tag.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\BubbleChart\\cirMesh.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\BubbleChart\\shapeMesh.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\BarChart\\line.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\BarChart\\prismMesh.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\BarChart\\ExtrudeMesh.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\map-chart\\BarChart\\tag.js",["297"],"import {\r\n  CSS2DRenderer,\r\n  CSS2DObject,\r\n} from 'three/examples/jsm/renderers/CSS2DRenderer'\r\n// 创建一个HTML标\r\nfunction batag(name, gdp) {\r\n  // 创建div元素(作为标签)\r\n  var div = document.createElement('div')\r\n  // div.style.visibility = 'hidden'\r\n  div.innerHTML = name + '<br>' + '宽带用户' + gdp + '万户'\r\n  div.style.padding = '4px 10px'\r\n  div.style.color = '#fff'\r\n  div.style.fontSize = '5px'\r\n  div.style.position = 'absolute'\r\n  div.style.backgroundColor = 'rgba(25,25,25,0.5)'\r\n  div.style.borderRadius = '5px'\r\n  // div.style.marginLeft = '50px';//HTML标签偏移\r\n  div.style.marginLeft = name.length * 2 + 'px' //HTML标签偏移\r\n  div.style.marginTop = '-8px' //HTML标签偏移\r\n  // 这里无法去读宽高度，说明还未渲染导致\r\n  // console.log(div.offsetWidth)\r\n  //div元素包装为CSS2模型对象CSS2DObject\r\n  var label = new CSS2DObject(div)\r\n  div.style.pointerEvents = 'none' //避免HTML标签遮挡三维场景的鼠标事件\r\n  // 设置HTML元素标签在three.js世界坐标中位置\r\n  // label.position.set(x, y, z);\r\n  return label //返回CSS2模型标签\r\n}\r\n\r\n// 创建一个CSS2渲染器CSS2DRenderer\r\nvar balabelRenderer = new CSS2DRenderer()\r\nbalabelRenderer.setSize(window.innerWidth, window.innerHeight)\r\nbalabelRenderer.domElement.style.position = 'absolute'\r\nbalabelRenderer.domElement.style.top = '0px'\r\nbalabelRenderer.domElement.style.left = '0px'\r\n// //设置.pointerEvents=none，以免模型标签HTML元素遮挡鼠标选择场景模型\r\nbalabelRenderer.domElement.style.pointerEvents = 'none'\r\ndocument.body.appendChild(balabelRenderer.domElement)\r\n\r\nexport { batag, balabelRenderer }\r\n",{"ruleId":"298","replacedBy":"299"},{"ruleId":"300","replacedBy":"301"},{"ruleId":"302","severity":1,"message":"303","line":11,"column":8,"nodeType":"304","messageId":"305","endLine":11,"endColumn":14},{"ruleId":"298","replacedBy":"306"},{"ruleId":"300","replacedBy":"307"},{"ruleId":"302","severity":1,"message":"308","line":2,"column":3,"nodeType":"304","messageId":"305","endLine":2,"endColumn":19},{"ruleId":"302","severity":1,"message":"309","line":4,"column":3,"nodeType":"304","messageId":"305","endLine":4,"endColumn":16},{"ruleId":"302","severity":1,"message":"310","line":5,"column":3,"nodeType":"304","messageId":"305","endLine":5,"endColumn":15},{"ruleId":"302","severity":1,"message":"311","line":17,"column":8,"nodeType":"304","messageId":"305","endLine":17,"endColumn":21},{"ruleId":"302","severity":1,"message":"312","line":2,"column":25,"nodeType":"304","messageId":"305","endLine":2,"endColumn":32},{"ruleId":"302","severity":1,"message":"313","line":9,"column":8,"nodeType":"304","messageId":"305","endLine":9,"endColumn":20},{"ruleId":"298","replacedBy":"314"},{"ruleId":"300","replacedBy":"315"},{"ruleId":"302","severity":1,"message":"316","line":6,"column":30,"nodeType":"304","messageId":"305","endLine":6,"endColumn":36},{"ruleId":"302","severity":1,"message":"317","line":17,"column":10,"nodeType":"304","messageId":"305","endLine":17,"endColumn":23},{"ruleId":"302","severity":1,"message":"318","line":18,"column":17,"nodeType":"304","messageId":"305","endLine":18,"endColumn":32},{"ruleId":"319","severity":1,"message":"320","line":10,"column":33,"nodeType":"321","messageId":"322","endLine":10,"endColumn":34},"no-native-reassign",["323"],"no-negated-in-lhs",["324"],"no-unused-vars","'Editor' is defined but never used.","Identifier","unusedVar",["323"],["324"],"'PieChartOutlined' is defined but never used.","'BlockOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'ThreeMapChart' is defined but never used.","'message' is defined but never used.","'Visualizatin' is defined but never used.",["323"],["324"],"'result' is assigned a value but never used.","'baExtrudeMesh' is defined but never used.","'balabelRenderer' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]