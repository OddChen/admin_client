[{"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\index.js":"1","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\App.js":"2","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\login\\login.jsx":"3","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\api\\index.js":"4","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\api\\ajax.js":"5","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\utils\\memoryUtils.js":"6","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\utils\\storageUtils.js":"7","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\dashboard\\dashboard.jsx":"8","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\header\\index.jsx":"9","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\home\\home.jsx":"10","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\manage\\manage.jsx":"11","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\config\\menu-config.js":"12","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\user\\user.jsx":"13","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\link-button\\index.jsx":"14","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\register\\register.jsx":"15","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\config\\cityselect-config.js":"16","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\editor.jsx":"17","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\charts\\lines.jsx":"18","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.page.jsx":"19","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.config.jsx":"20","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editorblock.jsx":"21","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.commander.js":"22","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\plugins\\command.plugin.js":"23","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\plugins\\keyboard-code.js":"24","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.utils.js":"25","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\plugins\\event.js":"26","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\charts\\bar3D.jsx":"27","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\service\\dialog\\dialog.jsx":"28","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\utils\\defer.js":"29","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.resize.jsx":"30","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editoroperator.jsx":"31","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.props.jsx":"32","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\hooks\\CallbackRef.js":"33","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\hooks\\useUpadate.js":"34","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editorscheme\\editorscheme.jsx":"35"},{"size":333,"mtime":1614580960429,"results":"36","hashOfConfig":"37"},{"size":668,"mtime":1620613979698,"results":"38","hashOfConfig":"37"},{"size":3765,"mtime":1619245551108,"results":"39","hashOfConfig":"37"},{"size":341,"mtime":1617070731512,"results":"40","hashOfConfig":"37"},{"size":794,"mtime":1616571413563,"results":"41","hashOfConfig":"37"},{"size":122,"mtime":1614582255264,"results":"42","hashOfConfig":"37"},{"size":484,"mtime":1614581432443,"results":"43","hashOfConfig":"37"},{"size":118,"mtime":1620724566995,"results":"44","hashOfConfig":"37"},{"size":2260,"mtime":1617614011265,"results":"45","hashOfConfig":"37"},{"size":1963,"mtime":1625130611207,"results":"46","hashOfConfig":"37"},{"size":109,"mtime":1615794788002,"results":"47","hashOfConfig":"37"},{"size":799,"mtime":1625140946573,"results":"48","hashOfConfig":"37"},{"size":103,"mtime":1615799954705,"results":"49","hashOfConfig":"37"},{"size":163,"mtime":1616660821234,"results":"50","hashOfConfig":"37"},{"size":3352,"mtime":1619242629264,"results":"51","hashOfConfig":"37"},{"size":215454,"mtime":1617874331776,"results":"52","hashOfConfig":"37"},{"size":465,"mtime":1625130353518,"results":"53","hashOfConfig":"37"},{"size":1713,"mtime":1625218061085,"results":"54","hashOfConfig":"37"},{"size":19909,"mtime":1625147118717,"results":"55","hashOfConfig":"37"},{"size":2231,"mtime":1625218298111,"results":"56","hashOfConfig":"37"},{"size":2350,"mtime":1625197027381,"results":"57","hashOfConfig":"37"},{"size":5806,"mtime":1624961571966,"results":"58","hashOfConfig":"37"},{"size":4281,"mtime":1620463700106,"results":"59","hashOfConfig":"37"},{"size":874,"mtime":1620303704212,"results":"60","hashOfConfig":"37"},{"size":1062,"mtime":1625047670856,"results":"61","hashOfConfig":"37"},{"size":358,"mtime":1620461383517,"results":"62","hashOfConfig":"37"},{"size":6156,"mtime":1624975297466,"results":"63","hashOfConfig":"37"},{"size":5222,"mtime":1625189213141,"results":"64","hashOfConfig":"37"},{"size":175,"mtime":1620872442189,"results":"65","hashOfConfig":"37"},{"size":3600,"mtime":1624262294496,"results":"66","hashOfConfig":"37"},{"size":5503,"mtime":1625195949773,"results":"67","hashOfConfig":"37"},{"size":692,"mtime":1625197039836,"results":"68","hashOfConfig":"37"},{"size":462,"mtime":1624969810539,"results":"69","hashOfConfig":"37"},{"size":227,"mtime":1624969788862,"results":"70","hashOfConfig":"37"},{"size":1620,"mtime":1625186259095,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1p7rju2",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\index.js",[],["145","146"],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\App.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\login\\login.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\api\\index.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\api\\ajax.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\utils\\memoryUtils.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\utils\\storageUtils.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\dashboard\\dashboard.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\header\\index.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\home\\home.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\manage\\manage.jsx",[],["147","148"],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\config\\menu-config.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\user\\user.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\link-button\\index.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\register\\register.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\config\\cityselect-config.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\editor.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\charts\\lines.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.page.jsx",["149"],"import React, { useRef, useMemo, useState } from 'react'\r\nimport '../iconfont/iconfont.css'\r\nimport { createEditorBlock } from './editor.utils'\r\nimport { EditorBlock } from './editorblock'\r\nimport { useEidtorCommand } from './editor.commander'\r\nimport { EditorResize, EditorResizeDirector } from './editor.resize'\r\nimport { createEvent } from '../plugins/event'\r\nimport { CallBackRef } from '../hooks/CallbackRef'\r\nimport { withRouter } from 'react-router'\r\nimport { dialog } from '../service/dialog/dialog'\r\nimport { notification } from 'antd'\r\nimport deepcopy from 'deepcopy'\r\nimport { EditorOperator } from './editoroperator'\r\n\r\nconst EditorPage = (props) => {\r\n  //当前的预览状态\r\n  const [preview, setPreview] = useState(false)\r\n  //当前的编辑状态\r\n  const [editing, setEditing] = useState(false)\r\n  //当前选中block的index\r\n  const [selectIndex, setSelectIndex] = useState(-1)\r\n\r\n  const selectBlock = useMemo(\r\n    () => props.value.blocks[selectIndex],\r\n    [props.value.blocks, selectIndex]\r\n  )\r\n\r\n  // container dom对象引用\r\n  // 这里是渲染完后才获取，因此一直有值\r\n  const containerRef = useRef({})\r\n  const bodyRef = useRef({})\r\n\r\n  //container对象样式\r\n  const containerStyles = useMemo(() => {\r\n    // console.log(props.value)\r\n    return {\r\n      height: `${props.value.container.height}px`,\r\n      width: `${props.value.container.width}px`,\r\n      background: `${props.value.container.background}`,\r\n    }\r\n  }, [\r\n    props.value.container.height,\r\n    props.value.container.width,\r\n    props.value.container.background,\r\n  ])\r\n\r\n  //编辑和预览状态的样式\r\n  const classes = useMemo(\r\n    () => ['editor', preview ? 'editor-preview' : null].join(' '),\r\n    [preview]\r\n  )\r\n\r\n  //拖拽处理逻辑\r\n  // 左边菜单的拖拽\r\n  const dragData = useRef({\r\n    dragComponent: null,\r\n  })\r\n  const menuDraggier = (() => {\r\n    const block = {\r\n      dragstart: CallBackRef((e, dragComponent) => {\r\n        containerRef.current.addEventListener('dragenter', container.dragenter)\r\n        containerRef.current.addEventListener('dragover', container.dragover)\r\n        containerRef.current.addEventListener('dragleave', container.dragleave)\r\n        containerRef.current.addEventListener('drop', container.drop)\r\n        dragData.current.dragComponent = dragComponent\r\n        dragstart.emit()\r\n      }),\r\n      dragend: CallBackRef((e) => {\r\n        containerRef.current.removeEventListener(\r\n          'dragenter',\r\n          container.dragenter\r\n        )\r\n        containerRef.current.removeEventListener('dragover', container.dragover)\r\n        containerRef.current.removeEventListener(\r\n          'dragleave',\r\n          container.dragleave\r\n        )\r\n        containerRef.current.removeEventListener('drop', container.drop)\r\n      }),\r\n    }\r\n    // 监听拖拽到容器部分\r\n    const container = {\r\n      dragenter: CallBackRef((e) => (e.dataTransfer.dropEffect = 'move')),\r\n      dragover: CallBackRef((e) => e.preventDefault()),\r\n      dragleave: CallBackRef((e) => (e.dataTransfer.dropEffect = 'none')),\r\n      drop: CallBackRef((e) => {\r\n        const { offsetX, offsetY } = e\r\n        const blocks = [...props.value.blocks]\r\n        blocks.push(\r\n          createEditorBlock({\r\n            top: offsetY,\r\n            left: offsetX,\r\n            component: dragData.current.dragComponent,\r\n          })\r\n        )\r\n        props.onChange({\r\n          ...props.value,\r\n          blocks,\r\n        })\r\n        // console.log(dragData.current, e.offsetX, e.offsetY)\r\n        setTimeout(() => dragend.emit())\r\n      }),\r\n    }\r\n    return block\r\n  })()\r\n\r\n  //统计所有被选中的block元素\r\n  const focusData = useMemo(() => {\r\n    const focus = []\r\n    const unfocus = []\r\n    props.value.blocks.forEach((block) =>\r\n      (block.focus ? focus : unfocus).push(block)\r\n    )\r\n    return {\r\n      focus,\r\n      unfocus,\r\n    }\r\n  }, [props.value.blocks])\r\n\r\n  //对外暴露的方法，重新渲染和清除未选项边框\r\n  //导入新的数据\r\n  const methods = {\r\n    // 更新blocks，重新渲染\r\n    updateBlocks: (blocks) => {\r\n      props.onChange({\r\n        ...props.value,\r\n        blocks: [...blocks],\r\n      })\r\n    },\r\n    //清空选中的元素\r\n    clearFocus: (external) =>\r\n      (!!external\r\n        ? focusData.focus.filter((item) => item !== external)\r\n        : focusData.focus\r\n      ).forEach((block) => {\r\n        block.focus = false\r\n      }, methods.updateBlocks(props.value.blocks)),\r\n    //导入新的数据后重新渲染\r\n    updateValue: (value) => {\r\n      props.onChange({ ...value })\r\n    },\r\n    flushedValue: () => {\r\n      setTimeout(() => {\r\n        commander.clear()\r\n        methods.updateValue(props.value)\r\n      }, 10)\r\n    },\r\n  }\r\n\r\n  //处理block元素的选中事件\r\n  const focusHandler = (() => {\r\n    //点击block元素的动作\r\n    const block = (e, block, index) => {\r\n      // console.log(block)\r\n      if (preview) {\r\n        return\r\n      }\r\n      //按住shift键后的效果，实现多选\r\n      if (e.shiftKey) {\r\n        if (focusData.focus.length <= 1) {\r\n          block.focus = true\r\n        } else {\r\n          block.focus = !block.focus\r\n        }\r\n        methods.updateBlocks(props.value.blocks)\r\n      } else {\r\n        if (!block.focus) {\r\n          block.focus = true\r\n          methods.clearFocus(block)\r\n        }\r\n      }\r\n\r\n      setSelectIndex(block.focus ? index : -1)\r\n      setTimeout(() => {\r\n        blockDraggier.mousedown(e, block)\r\n      })\r\n    }\r\n    //点击容器\r\n    const container = (e) => {\r\n      if (preview) {\r\n        return\r\n      }\r\n      //排除点击到block元素\r\n      if (e.target !== e.currentTarget) {\r\n        return\r\n      }\r\n      if (!e.shiftKey) {\r\n        methods.clearFocus()\r\n        setSelectIndex(-1)\r\n      }\r\n    }\r\n    return {\r\n      block,\r\n      container,\r\n    }\r\n  })()\r\n\r\n  /*\r\n   *拖拽所有被选中的block\r\n   */\r\n  //标准线\r\n  const [mark, setMark] = useState({ x: null, y: null })\r\n  //拖拽数据\r\n  const blockDragData = useRef({\r\n    //鼠标的开始位置\r\n    startX: 0,\r\n    startY: 0,\r\n    //是否按住了shift\r\n    shiftKey: false,\r\n    //block的开始位置\r\n    startLeft: 0,\r\n    startTop: 0,\r\n    //所有block的开始位置\r\n    startPosArray: [],\r\n    //是否处于拖拽状态\r\n    dragging: false,\r\n    markLines: {\r\n      x: [],\r\n      y: [],\r\n    },\r\n    //鼠标在拖拽过程中的位置\r\n    moveX: 0,\r\n    moveY: 0,\r\n    //滚动条\r\n    body: {\r\n      startScrollTop: 0,\r\n      moveScrollTop: 0,\r\n    },\r\n  })\r\n  //拖拽移动操作\r\n  const blockDraggier = (() => {\r\n    const handleMove = (e) => {\r\n      if (!blockDragData.current.dragging) {\r\n        blockDragData.current.dragging = true\r\n        dragstart.emit()\r\n      }\r\n      let {\r\n        moveX,\r\n        moveY,\r\n        body,\r\n        shiftKey,\r\n        startX,\r\n        startY,\r\n        startPosArray,\r\n        markLines,\r\n        startTop,\r\n        startLeft,\r\n      } = blockDragData.current\r\n      // let { clientX: moveX, clientY: moveY } = e\r\n      moveY = moveY + (body.moveScrollTop - body.startScrollTop)\r\n      //按着shift的情况下只能垂直和水平移动\r\n      if (shiftKey) {\r\n        if (Math.abs(moveX - startX) > Math.abs(moveY - startY)) {\r\n          moveY = startY\r\n        } else {\r\n          moveX = startX\r\n        }\r\n      }\r\n      // console.log(startTop, moveY, startY)\r\n      //设置标线\r\n      const now = {\r\n        mark: {\r\n          x: null,\r\n          y: null,\r\n        },\r\n        top: startTop + moveY - startY,\r\n        left: startLeft + moveX - startX,\r\n      }\r\n\r\n      for (let i = 0; i < markLines.y.length; i++) {\r\n        const { top, showTop } = markLines.y[i]\r\n        if (Math.abs(now.top - top) < 5) {\r\n          moveY = top + startY - startTop\r\n          now.mark.y = showTop\r\n        }\r\n      }\r\n      for (let i = 0; i < markLines.x.length; i++) {\r\n        const { left, showLeft } = markLines.x[i]\r\n        if (Math.abs(now.left - left) < 5) {\r\n          moveX = left + startX - startLeft\r\n          now.mark.x = showLeft\r\n        }\r\n      }\r\n\r\n      //移动block位置\r\n      const durX = moveX - startX\r\n      const durY = moveY - startY\r\n      focusData.focus.forEach((block, index) => {\r\n        // console.log(startPosArray)\r\n        const { top, left } = startPosArray[index]\r\n        block.top = top + durY\r\n        block.left = left + durX\r\n      })\r\n      // console.log(now.mark)\r\n      setMark(now.mark)\r\n      methods.updateBlocks(props.value.blocks)\r\n    }\r\n\r\n    const mousedown = (e, block) => {\r\n      document.addEventListener('mousemove', mousemove)\r\n      document.addEventListener('mouseup', mouseup)\r\n      bodyRef.current.addEventListener('scroll', scroll)\r\n      // console.log(block)\r\n      //当前鼠标位置以及所有被选中元素的位置\r\n      blockDragData.current = {\r\n        startX: e.clientX,\r\n        startY: e.clientY,\r\n        shiftKey: e.shiftKey,\r\n        startLeft: block.left,\r\n        startTop: block.top,\r\n        startPosArray: focusData.focus.map(({ top, left }) => ({ top, left })),\r\n        dragging: false,\r\n        markLines: (() => {\r\n          const x = []\r\n          const y = []\r\n          const { unfocus } = focusData\r\n          unfocus.forEach((b) => {\r\n            //b:作为对齐标准的block属性, top，left:拖拽的block位置, showTop,showLeft:标线位置\r\n            //两个block顶部对齐\r\n            y.push({ top: b.top, showTop: b.top })\r\n            //中间对齐\r\n            y.push({\r\n              top: b.top + b.height / 2 - block.height / 2,\r\n              showTop: b.top + b.height / 2,\r\n            })\r\n            //底部对齐\r\n            y.push({\r\n              top: b.top + b.height - block.height,\r\n              showTop: b.top + b.height,\r\n            })\r\n            //底部对齐顶部\r\n            y.push({\r\n              top: b.top - block.height,\r\n              showTop: b.top,\r\n            })\r\n            //顶部对齐底部\r\n            y.push({\r\n              top: b.top + b.height,\r\n              showTop: b.top + b.height,\r\n            })\r\n\r\n            //两个block左侧对齐\r\n            x.push({ left: b.left, showLeft: b.left })\r\n            //中间对齐\r\n            x.push({\r\n              left: b.left + b.width / 2 - block.height / 2,\r\n              showLeft: b.left + b.width / 2,\r\n            })\r\n            //右侧对齐\r\n            x.push({\r\n              left: b.left + b.width - block.width,\r\n              showLeft: b.left + b.width,\r\n            })\r\n            //右侧对齐左侧\r\n            x.push({\r\n              left: b.left - block.width,\r\n              showLeft: b.left,\r\n            })\r\n            //左侧对齐右侧\r\n            x.push({\r\n              left: b.left + b.width,\r\n              showLeft: b.left + b.width,\r\n            })\r\n          })\r\n\r\n          return { x, y }\r\n        })(),\r\n        moveX: e.clientX,\r\n        moveY: e.clientY,\r\n        body: {\r\n          startScrollTop: bodyRef.current.scrollTop,\r\n          moveScrollTop: bodyRef.current.scrollTop,\r\n        },\r\n      }\r\n    }\r\n\r\n    const mousemove = (e) => {\r\n      blockDragData.current.moveX = e.clientX\r\n      blockDragData.current.moveY = e.clientY\r\n      handleMove()\r\n    }\r\n\r\n    const mouseup = (e) => {\r\n      document.removeEventListener('mousemove', mousemove)\r\n      document.removeEventListener('mouseup', mouseup)\r\n      bodyRef.current.removeEventListener('scroll', scroll)\r\n      //清除标线\r\n      setMark({ x: null, y: null })\r\n\r\n      if (blockDragData.current.dragging) {\r\n        dragend.emit()\r\n      }\r\n    }\r\n\r\n    const scroll = CallBackRef((e) => {\r\n      blockDragData.current.body.moveScrollTop = e.target.scrollTop\r\n      handleMove()\r\n    })\r\n\r\n    return { mousedown, mark }\r\n  })()\r\n\r\n  //拖拽调整block大小\r\n  const resizeData = useRef({\r\n    block: {},\r\n    startX: 0,\r\n    startY: 0,\r\n    direction: {\r\n      horizontal: EditorResizeDirector.start,\r\n      vertical: EditorResizeDirector.start,\r\n    },\r\n    startBlock: {\r\n      top: 0,\r\n      left: 0,\r\n      height: 0,\r\n      width: 0,\r\n    },\r\n    dragging: false,\r\n  })\r\n  const resizeDraggier = (() => {\r\n    //direction: { horizontal, vertical }\r\n    const mousedown = (e, direction, block) => {\r\n      e.stopPropagation()\r\n      document.addEventListener('mousemove', mousemove)\r\n      document.addEventListener('mouseup', mouseup)\r\n      resizeData.current = {\r\n        block,\r\n        startX: e.clientX,\r\n        startY: e.clientY,\r\n        direction,\r\n        startBlock: {\r\n          ...deepcopy(block),\r\n        },\r\n        dragging: false,\r\n      }\r\n    }\r\n\r\n    const mousemove = (e) => {\r\n      if (!resizeData.current.dragging) {\r\n        resizeData.current.dragging = true\r\n        dragstart.emit()\r\n      }\r\n\r\n      let { startX, startY, startBlock, direction, block } = resizeData.current\r\n      let { clientX: moveX, clientY: moveY } = e\r\n\r\n      if (direction.horizontal === EditorResizeDirector.center) {\r\n        moveX = startX\r\n      }\r\n      if (direction.vertical === EditorResizeDirector.center) {\r\n        moveY = startY\r\n      }\r\n\r\n      let durX = moveX - startX\r\n      let durY = moveY - startY\r\n      // console.log(durX, durY)\r\n      // console.log(startBlock)\r\n      if (direction.vertical === EditorResizeDirector.start) {\r\n        durY = -durY\r\n        block.top = startBlock.top - durY\r\n      }\r\n      if (direction.horizontal === EditorResizeDirector.start) {\r\n        durX = -durX\r\n        block.left = startBlock.left - durX\r\n      }\r\n\r\n      const width = startBlock.width + durX\r\n      const height = startBlock.height + durY\r\n      // console.log(width, height)\r\n      block.width = width\r\n      block.height = height\r\n      block.hasResize = true\r\n      // console.log(block)\r\n      methods.updateBlocks(props.value.blocks)\r\n    }\r\n\r\n    const mouseup = (e) => {\r\n      document.removeEventListener('mousemove', mousemove)\r\n      document.removeEventListener('mouseup', mouseup)\r\n      // 使得echarts组件在拖拽大小后刷新页面\r\n      methods.flushedValue()\r\n\r\n      if (resizeData.current.dragging) {\r\n        setTimeout(dragend.emit)\r\n      }\r\n    }\r\n    return { mousedown }\r\n  })()\r\n\r\n  /**\r\n   * header的功能选项按钮\r\n   **/\r\n  //监听者模式，添加开始和结束的监听，完善回退和前进操作\r\n  const [dragstart] = useState(() => createEvent())\r\n  const [dragend] = useState(() => createEvent())\r\n\r\n  //命令管理\r\n  const commander = useEidtorCommand({\r\n    value: props.value,\r\n    focusData,\r\n    updateBlocks: methods.updateBlocks,\r\n    updateValue: methods.updateValue,\r\n    dragstart,\r\n    dragend,\r\n  })\r\n\r\n  //header栏按钮和命令\r\n  const buttons = [\r\n    {\r\n      label: '撤销',\r\n      icon: 'icon-back',\r\n      handler: commander.undo,\r\n      tip: 'ctrl+z',\r\n    },\r\n    // {\r\n    //   label: '重做',\r\n    //   icon: 'icon-forward',\r\n    //   handler: commander.redo,\r\n    //   tip: 'ctrl+y, ctri+shift+z',\r\n    // },\r\n    {\r\n      label: () => (preview ? '编辑' : '预览'),\r\n      icon: () => (preview ? 'icon-edit' : 'icon-browse'),\r\n      handler: () => {\r\n        if (!preview) {\r\n          methods.clearFocus()\r\n        }\r\n        setPreview(!preview)\r\n      },\r\n    },\r\n    {\r\n      label: '导入',\r\n      icon: 'icon-import',\r\n      handler: async () => {\r\n        const text = await dialog.textarea('', {\r\n          title: '请选择要导入的方案',\r\n        })\r\n        // console.log(text)\r\n        try {\r\n          const data = JSON.parse(text || '')\r\n          // console.log(data)\r\n          commander.updateValue(data)\r\n        } catch (e) {\r\n          console.error(e)\r\n          notification.open({\r\n            message: '导入失败',\r\n            description: '导入数据的格式不正常，请检查！',\r\n          })\r\n        }\r\n      },\r\n    },\r\n    {\r\n      label: '导出',\r\n      icon: 'icon-export',\r\n      handler: () => {\r\n        dialog.textarea(props.value, {\r\n          editReadonly: true,\r\n          title: '导出设计方案',\r\n        })\r\n      },\r\n    },\r\n    {\r\n      label: '置顶',\r\n      icon: 'icon-place-top',\r\n      handler: commander.placeTop,\r\n      tip: 'ctrl+up',\r\n    },\r\n    {\r\n      label: '置底',\r\n      icon: 'icon-place-bottom',\r\n      handler: commander.placeBottom,\r\n      tip: 'ctrl+down',\r\n    },\r\n    {\r\n      label: '删除',\r\n      icon: 'icon-delete',\r\n      handler: commander.delete,\r\n      tip: 'ctrl+d, backspace, delete',\r\n    },\r\n    { label: '清空', icon: 'icon-delete', handler: commander.clear },\r\n    {\r\n      label: '刷新',\r\n      icon: 'icon-reset',\r\n      handler() {\r\n        methods.flushedValue()\r\n      },\r\n    },\r\n    {\r\n      label: '关闭',\r\n      icon: 'icon-close',\r\n      handler: () => {\r\n        methods.clearFocus()\r\n        setEditing(false)\r\n\r\n        //回头改成跳转到展示部分\r\n        props.history.push('/editorscheme')\r\n      },\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <div className='editor-menu'>\r\n        {props.config.componentArray.map((component, index) => (\r\n          <div\r\n            className='editor-menu-item'\r\n            key={index}\r\n            draggable\r\n            onDragStart={(e) => menuDraggier.dragstart(e, component)}\r\n            onDragEnd={menuDraggier.dragend}\r\n          >\r\n            {component.preview()}\r\n            <div className='editor-menu-item-name'>{component.name}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className='editor-head'>\r\n        {buttons.map((btn, index) => {\r\n          const label =\r\n            typeof btn.label === 'function' ? btn.label() : btn.label\r\n          const icon = typeof btn.icon === 'function' ? btn.icon() : btn.icon\r\n          return (\r\n            <div className='editor-head-btn' key={index} onClick={btn.handler}>\r\n              <i className={`iconfont ${icon}`} />\r\n              <span>{label}</span>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n      <div className='editor-body' ref={bodyRef}>\r\n        <div\r\n          className='editor-container'\r\n          style={containerStyles}\r\n          ref={containerRef}\r\n          onMouseDown={focusHandler.container}\r\n        >\r\n          {props.value.blocks.map((block, index) => (\r\n            <EditorBlock\r\n              key={index}\r\n              block={block}\r\n              config={props.config}\r\n              onMouseDown={(e) => focusHandler.block(e, block, index)}\r\n            >\r\n              {block.focus &&\r\n                !!props.config.componentMap[block.componentKey] &&\r\n                !!props.config.componentMap[block.componentKey].resize &&\r\n                (props.config.componentMap[block.componentKey].resize.width ||\r\n                  props.config.componentMap[block.componentKey].resize\r\n                    .height) && (\r\n                  <EditorResize\r\n                    component={props.config.componentMap[block.componentKey]}\r\n                    onMouseDown={(e, direction) =>\r\n                      resizeDraggier.mousedown(e, direction, block)\r\n                    }\r\n                  />\r\n                )}\r\n            </EditorBlock>\r\n          ))}\r\n          {blockDraggier.mark.x !== null && (\r\n            <div\r\n              className='editor-mark-x'\r\n              style={{ left: `${blockDraggier.mark.x}px` }}\r\n            ></div>\r\n          )}\r\n          {blockDraggier.mark.y !== null && (\r\n            <div\r\n              className='editor-mark-y'\r\n              style={{ top: `${blockDraggier.mark.y}px` }}\r\n            ></div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <EditorOperator\r\n        selectBlock={selectBlock}\r\n        value={props.value}\r\n        updateValue={methods.updateValue}\r\n        updateBlocks={methods.updateBlocks}\r\n        config={props.config}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport default withRouter(EditorPage)\r\n","D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.config.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editorblock.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.commander.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\plugins\\command.plugin.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\plugins\\keyboard-code.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.utils.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\plugins\\event.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\components\\charts\\bar3D.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\service\\dialog\\dialog.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\utils\\defer.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.resize.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editoroperator.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\components\\editor.props.jsx",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\hooks\\CallbackRef.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editor\\hooks\\useUpadate.js",[],"D:\\WorkSpace\\react_managementsystem\\admin_client\\src\\pages\\editorscheme\\editorscheme.jsx",["150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"151","replacedBy":"155"},{"ruleId":"153","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":19,"column":10,"nodeType":"159","messageId":"160","endLine":19,"endColumn":17},{"ruleId":"157","severity":1,"message":"161","line":10,"column":19,"nodeType":"159","messageId":"160","endLine":10,"endColumn":29},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],["162"],["163"],"no-unused-vars","'editing' is assigned a value but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]